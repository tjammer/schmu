prog: With
##
## Ends in an error in state: 0.
##
## prog' -> . prog [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type With
##
## Ends in an error in state: 3.
##
## top_item -> Type . Lowercase_id option(typedef_poly_id) Equal Lbrac separated_nonempty_list(Comma,type_decl) Rbrac [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type . Lowercase_id option(typedef_poly_id) Equal build_type_list [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type . Lowercase_id option(typedef_poly_id) Equal separated_nonempty_list(Bar,ctordef) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id With
##
## Ends in an error in state: 4.
##
## top_item -> Type Lowercase_id . option(typedef_poly_id) Equal Lbrac separated_nonempty_list(Comma,type_decl) Rbrac [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id . option(typedef_poly_id) Equal build_type_list [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id . option(typedef_poly_id) Equal separated_nonempty_list(Bar,ctordef) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar With
##
## Ends in an error in state: 5.
##
## option(typedef_poly_id) -> Lpar . Quote Lowercase_id Rpar [ Equal ]
##
## The known suffix of the stack is as follows:
## Lpar
##

Type variables are denoted with " ' ". Try 'a instead of a for type variables

prog: Type Lowercase_id Lpar Quote With
##
## Ends in an error in state: 6.
##
## option(typedef_poly_id) -> Lpar Quote . Lowercase_id Rpar [ Equal ]
##
## The known suffix of the stack is as follows:
## Lpar Quote
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar Quote Lowercase_id With
##
## Ends in an error in state: 7.
##
## option(typedef_poly_id) -> Lpar Quote Lowercase_id . Rpar [ Equal ]
##
## The known suffix of the stack is as follows:
## Lpar Quote Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar Quote Lowercase_id Rpar With
##
## Ends in an error in state: 9.
##
## top_item -> Type Lowercase_id option(typedef_poly_id) . Equal Lbrac separated_nonempty_list(Comma,type_decl) Rbrac [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id option(typedef_poly_id) . Equal build_type_list [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id option(typedef_poly_id) . Equal separated_nonempty_list(Bar,ctordef) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type Lowercase_id option(typedef_poly_id)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal With
##
## Ends in an error in state: 10.
##
## top_item -> Type Lowercase_id option(typedef_poly_id) Equal . Lbrac separated_nonempty_list(Comma,type_decl) Rbrac [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id option(typedef_poly_id) Equal . build_type_list [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id option(typedef_poly_id) Equal . separated_nonempty_list(Bar,ctordef) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type Lowercase_id option(typedef_poly_id) Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote With
##
## Ends in an error in state: 11.
##
## build_type_list -> Quote . Lowercase_id Lpar build_type_list Rpar [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
## build_type_list -> Quote . Lowercase_id [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Quote
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id With
##
## Ends in an error in state: 12.
##
## build_type_list -> Quote Lowercase_id . Lpar build_type_list Rpar [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
## build_type_list -> Quote Lowercase_id . [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Quote Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id Lpar With
##
## Ends in an error in state: 13.
##
## build_type_list -> Quote Lowercase_id Lpar . build_type_list Rpar [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Quote Lowercase_id Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id With
##
## Ends in an error in state: 14.
##
## build_type_list -> Lowercase_id . Lpar build_type_list Rpar [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
## build_type_list -> Lowercase_id . [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Lpar With
##
## Ends in an error in state: 15.
##
## build_type_list -> Lowercase_id Lpar . build_type_list Rpar [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Lpar Lowercase_id Uppercase_id
##
## Ends in an error in state: 16.
##
## build_type_list -> Lowercase_id Lpar build_type_list . Rpar [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Lpar build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id Lpar Lowercase_id Uppercase_id
##
## Ends in an error in state: 18.
##
## build_type_list -> Quote Lowercase_id Lpar build_type_list . Rpar [ Uppercase_id U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Quote Lowercase_id Lpar build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac With
##
## Ends in an error in state: 20.
##
## top_item -> Type Lowercase_id option(typedef_poly_id) Equal Lbrac . separated_nonempty_list(Comma,type_decl) Rbrac [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type Lowercase_id option(typedef_poly_id) Equal Lbrac
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Mutable With
##
## Ends in an error in state: 24.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon build_type_list Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon build_type_list Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id With
##
## Ends in an error in state: 25.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon build_type_list Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon build_type_list Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id
##

Record type declarations have the following form: type id = { field : <type> }

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon With
##
## Ends in an error in state: 26.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . build_type_list Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . build_type_list Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar With
##
## Ends in an error in state: 27.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar . separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar . separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar With
##
## Ends in an error in state: 28.
##
## separated_nonempty_list(Comma,type_func) -> Lpar . separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> Lpar . separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar With
##
## Ends in an error in state: 30.
##
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar . Arrow_right build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar . Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar separated_nonempty_list(Comma,type_list) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right With
##
## Ends in an error in state: 31.
##
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right . build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right . build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right Lowercase_id Uppercase_id
##
## Ends in an error in state: 32.
##
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list . [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list . Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right Lowercase_id Comma With
##
## Ends in an error in state: 33.
##
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list Comma . separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Uppercase_id
##
## Ends in an error in state: 35.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list . Arrow_right build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list . [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list . Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list . Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Comma With
##
## Ends in an error in state: 36.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list Comma . separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right With
##
## Ends in an error in state: 38.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right . build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right . build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right Lowercase_id Uppercase_id
##
## Ends in an error in state: 39.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right build_type_list . [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right build_type_list . Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right Lowercase_id Comma With
##
## Ends in an error in state: 40.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right build_type_list Comma . separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Arrow_right build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Uppercase_id
##
## Ends in an error in state: 42.
##
## separated_nonempty_list(Comma,type_list) -> build_type_list . [ Rpar ]
## separated_nonempty_list(Comma,type_list) -> build_type_list . Comma separated_nonempty_list(Comma,type_list) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Comma With
##
## Ends in an error in state: 43.
##
## separated_nonempty_list(Comma,type_list) -> build_type_list Comma . separated_nonempty_list(Comma,type_list) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar With
##
## Ends in an error in state: 46.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar . Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar . Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right With
##
## Ends in an error in state: 47.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right . build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right . build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id Uppercase_id
##
## Ends in an error in state: 48.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list . [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list . Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id Comma With
##
## Ends in an error in state: 49.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma . separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Uppercase_id
##
## Ends in an error in state: 51.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list . Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list . [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list . Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list . Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Comma With
##
## Ends in an error in state: 52.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Comma . separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right With
##
## Ends in an error in state: 54.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right . build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right . build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id Uppercase_id
##
## Ends in an error in state: 55.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list . [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list . Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id Comma With
##
## Ends in an error in state: 56.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list Comma . separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id With
##
## Ends in an error in state: 59.
##
## separated_nonempty_list(Bar,ctordef) -> ctor . option(ctortyp) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## separated_nonempty_list(Bar,ctordef) -> ctor . option(ctortyp) Bar separated_nonempty_list(Bar,ctordef) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## ctor
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar With
##
## Ends in an error in state: 60.
##
## option(ctortyp) -> Lpar . build_type_list Arrow_right build_type_list Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
## option(ctortyp) -> Lpar . Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
## option(ctortyp) -> Lpar . build_type_list Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lpar With
##
## Ends in an error in state: 61.
##
## option(ctortyp) -> Lpar Lpar . separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
##
## The known suffix of the stack is as follows:
## Lpar Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lpar Lowercase_id Rpar With
##
## Ends in an error in state: 63.
##
## option(ctortyp) -> Lpar Lpar separated_nonempty_list(Comma,type_list) Rpar . Arrow_right build_type_list Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
##
## The known suffix of the stack is as follows:
## Lpar Lpar separated_nonempty_list(Comma,type_list) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lpar Lowercase_id Rpar Arrow_right With
##
## Ends in an error in state: 64.
##
## option(ctortyp) -> Lpar Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right . build_type_list Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
##
## The known suffix of the stack is as follows:
## Lpar Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lpar Lowercase_id Rpar Arrow_right Lowercase_id Uppercase_id
##
## Ends in an error in state: 65.
##
## option(ctortyp) -> Lpar Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list . Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
##
## The known suffix of the stack is as follows:
## Lpar Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lowercase_id Uppercase_id
##
## Ends in an error in state: 67.
##
## option(ctortyp) -> Lpar build_type_list . Arrow_right build_type_list Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
## option(ctortyp) -> Lpar build_type_list . Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
##
## The known suffix of the stack is as follows:
## Lpar build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lowercase_id Arrow_right With
##
## Ends in an error in state: 69.
##
## option(ctortyp) -> Lpar build_type_list Arrow_right . build_type_list Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
##
## The known suffix of the stack is as follows:
## Lpar build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lowercase_id Arrow_right Lowercase_id Uppercase_id
##
## Ends in an error in state: 70.
##
## option(ctortyp) -> Lpar build_type_list Arrow_right build_type_list . Rpar [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id Bar ]
##
## The known suffix of the stack is as follows:
## Lpar build_type_list Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lowercase_id Rpar With
##
## Ends in an error in state: 72.
##
## separated_nonempty_list(Bar,ctordef) -> ctor option(ctortyp) . [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## separated_nonempty_list(Bar,ctordef) -> ctor option(ctortyp) . Bar separated_nonempty_list(Bar,ctordef) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## ctor option(ctortyp)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Bar With
##
## Ends in an error in state: 73.
##
## separated_nonempty_list(Bar,ctordef) -> ctor option(ctortyp) Bar . separated_nonempty_list(Bar,ctordef) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## ctor option(ctortyp) Bar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_i With
##
## Ends in an error in state: 78.
##
## expr -> Minus_i . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Minus_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_f With
##
## Ends in an error in state: 79.
##
## expr -> Minus_f . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Minus_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match With
##
## Ends in an error in state: 80.
##
## expr -> Match . separated_nonempty_list(Comma,expr) With Begin nonempty_list(clause) End [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Match
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lpar With
##
## Ends in an error in state: 81.
##
## expr -> Lpar . Rpar [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> Lpar . expr Rpar [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack With
##
## Ends in an error in state: 84.
##
## vector_lit -> Lbrack . loption(separated_nonempty_list(Comma,expr)) Rbrack [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lbrack
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac With
##
## Ends in an error in state: 85.
##
## expr -> Lbrac . separated_nonempty_list(Comma,record_item) Rbrac [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lbrac
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id With
##
## Ends in an error in state: 86.
##
## separated_nonempty_list(Comma,record_item) -> Lowercase_id . Equal expr [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id . [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id . Equal expr Comma separated_nonempty_list(Comma,record_item) [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id . Comma separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal With
##
## Ends in an error in state: 87.
##
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal . expr [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal . expr Comma separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If With
##
## Ends in an error in state: 89.
##
## expr -> If . expr Then block list(elif) option(elseblk) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## If
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Fun With
##
## Ends in an error in state: 91.
##
## expr -> Fun . parens(decl) Arrow_right block [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Fun
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar With
##
## Ends in an error in state: 92.
##
## parens(decl) -> Lpar . loption(separated_nonempty_list(Comma,decl)) Rpar [ Equal Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id With
##
## Ends in an error in state: 97.
##
## separated_nonempty_list(Comma,decl) -> ident . option(type_expr) [ Rpar ]
## separated_nonempty_list(Comma,decl) -> ident . option(type_expr) Comma separated_nonempty_list(Comma,decl) [ Rpar ]
##
## The known suffix of the stack is as follows:
## ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon With
##
## Ends in an error in state: 98.
##
## option(type_expr) -> Colon . build_type_list Arrow_right build_type_list [ Rpar Equal Comma ]
## option(type_expr) -> Colon . Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rpar Equal Comma ]
## option(type_expr) -> Colon . build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar With
##
## Ends in an error in state: 99.
##
## option(type_expr) -> Colon Lpar . separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Rpar With
##
## Ends in an error in state: 101.
##
## option(type_expr) -> Colon Lpar separated_nonempty_list(Comma,type_func) Rpar . Arrow_right build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon Lpar separated_nonempty_list(Comma,type_func) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right With
##
## Ends in an error in state: 102.
##
## option(type_expr) -> Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right . build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Uppercase_id
##
## Ends in an error in state: 104.
##
## option(type_expr) -> Colon build_type_list . Arrow_right build_type_list [ Rpar Equal Comma ]
## option(type_expr) -> Colon build_type_list . [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Arrow_right With
##
## Ends in an error in state: 105.
##
## option(type_expr) -> Colon build_type_list Arrow_right . build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id Colon Lowercase_id Equal
##
## Ends in an error in state: 107.
##
## separated_nonempty_list(Comma,decl) -> ident option(type_expr) . [ Rpar ]
## separated_nonempty_list(Comma,decl) -> ident option(type_expr) . Comma separated_nonempty_list(Comma,decl) [ Rpar ]
##
## The known suffix of the stack is as follows:
## ident option(type_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
## In state 104, spurious reduction of production option(type_expr) -> Colon build_type_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id Comma With
##
## Ends in an error in state: 108.
##
## separated_nonempty_list(Comma,decl) -> ident option(type_expr) Comma . separated_nonempty_list(Comma,decl) [ Rpar ]
##
## The known suffix of the stack is as follows:
## ident option(type_expr) Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar With
##
## Ends in an error in state: 110.
##
## expr -> Fun parens(decl) . Arrow_right block [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Fun parens(decl)
##

Expecting '->'

prog: Fun Lpar Rpar Arrow_right With
##
## Ends in an error in state: 111.
##
## expr -> Fun parens(decl) Arrow_right . block [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Fun parens(decl) Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Builtin_id With
##
## Ends in an error in state: 115.
##
## expr -> Builtin_id . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Builtin_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Lpar With
##
## Ends in an error in state: 116.
##
## parens(expr) -> Lpar . loption(separated_nonempty_list(Comma,expr)) Rpar [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Lpar Uppercase_id With
##
## Ends in an error in state: 119.
##
## parens(expr) -> Lpar loption(separated_nonempty_list(Comma,expr)) . Rpar [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lpar loption(separated_nonempty_list(Comma,expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 121, spurious reduction of production separated_nonempty_list(Comma,expr) -> expr
## In state 118, spurious reduction of production loption(separated_nonempty_list(Comma,expr)) -> separated_nonempty_list(Comma,expr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack Uppercase_id Wildcard
##
## Ends in an error in state: 121.
##
## expr -> expr . Plus_i expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Rpar Rbrack Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## separated_nonempty_list(Comma,expr) -> expr . [ With Rpar Rbrack ]
## separated_nonempty_list(Comma,expr) -> expr . Comma separated_nonempty_list(Comma,expr) [ With Rpar Rbrack ]
##
## The known suffix of the stack is as follows:
## expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Plus_i With
##
## Ends in an error in state: 122.
##
## expr -> expr Plus_i . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Plus_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Plus_i False Quote
##
## Ends in an error in state: 123.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Plus_i expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Plus_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Pipe_tail With
##
## Ends in an error in state: 124.
##
## expr -> expr Pipe_tail . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Pipe_tail
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Pipe_tail False Quote
##
## Ends in an error in state: 125.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Pipe_tail expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Pipe_tail expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Quote
##
## Ends in an error in state: 127.
##
## expr -> ctor . option(parens_single(expr)) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## ctor
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Lpar With
##
## Ends in an error in state: 128.
##
## parens_single(expr) -> Lpar . expr Rpar [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Lpar Uppercase_id With
##
## Ends in an error in state: 129.
##
## expr -> expr . Plus_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## parens_single(expr) -> Lpar expr . Rpar [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lpar expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Plus_f With
##
## Ends in an error in state: 131.
##
## expr -> expr Plus_f . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Plus_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Plus_f False Quote
##
## Ends in an error in state: 132.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Plus_f expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Plus_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Pipe_head With
##
## Ends in an error in state: 133.
##
## expr -> expr Pipe_head . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Pipe_head
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Pipe_head False Quote
##
## Ends in an error in state: 134.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Pipe_head expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Pipe_head expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Mult_i With
##
## Ends in an error in state: 136.
##
## expr -> expr Mult_i . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Mult_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Mult_i False Quote
##
## Ends in an error in state: 137.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Mult_i expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Mult_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Dot With
##
## Ends in an error in state: 138.
##
## expr -> expr Dot . Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Dot . Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Dot
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Dot Lowercase_id Quote
##
## Ends in an error in state: 139.
##
## expr -> expr Dot Lowercase_id . Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Dot Lowercase_id . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Dot Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Dot Lowercase_id Arrow_left With
##
## Ends in an error in state: 140.
##
## expr -> expr Dot Lowercase_id Arrow_left . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Dot Lowercase_id Arrow_left
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Dot Lowercase_id Arrow_left False Quote
##
## Ends in an error in state: 141.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Dot Lowercase_id Arrow_left expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Dot Lowercase_id Arrow_left expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Or With
##
## Ends in an error in state: 142.
##
## expr -> expr Or . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Or
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Or False Quote
##
## Ends in an error in state: 143.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Or expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Or expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Mult_f With
##
## Ends in an error in state: 144.
##
## expr -> expr Mult_f . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Mult_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Mult_f False Quote
##
## Ends in an error in state: 145.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Mult_f expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Mult_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Bin_equal_i With
##
## Ends in an error in state: 146.
##
## expr -> expr Bin_equal_i . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Bin_equal_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Bin_equal_i False Quote
##
## Ends in an error in state: 147.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Bin_equal_i expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Bin_equal_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Bin_equal_f With
##
## Ends in an error in state: 148.
##
## expr -> expr Bin_equal_f . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Bin_equal_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Bin_equal_f False Quote
##
## Ends in an error in state: 149.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Bin_equal_f expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Bin_equal_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Minus_i With
##
## Ends in an error in state: 150.
##
## expr -> expr Minus_i . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Minus_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Minus_i False Quote
##
## Ends in an error in state: 151.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Minus_i expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Minus_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Div_i With
##
## Ends in an error in state: 152.
##
## expr -> expr Div_i . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Div_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Div_i False Quote
##
## Ends in an error in state: 153.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Div_i expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Div_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Div_f With
##
## Ends in an error in state: 154.
##
## expr -> expr Div_f . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Div_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Div_f False Quote
##
## Ends in an error in state: 155.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Div_f expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Div_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Minus_f With
##
## Ends in an error in state: 156.
##
## expr -> expr Minus_f . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Minus_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Minus_f False Quote
##
## Ends in an error in state: 157.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Minus_f expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Minus_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Less_i With
##
## Ends in an error in state: 158.
##
## expr -> expr Less_i . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Less_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Less_i False Quote
##
## Ends in an error in state: 159.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Less_i expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Less_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Less_f With
##
## Ends in an error in state: 160.
##
## expr -> expr Less_f . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Less_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Less_f False Quote
##
## Ends in an error in state: 161.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Less_f expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Less_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Greater_i With
##
## Ends in an error in state: 162.
##
## expr -> expr Greater_i . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Greater_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Greater_i False Quote
##
## Ends in an error in state: 163.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Greater_i expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Greater_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Greater_f With
##
## Ends in an error in state: 164.
##
## expr -> expr Greater_f . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Greater_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Greater_f False Quote
##
## Ends in an error in state: 165.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr Greater_f expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr Greater_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id And With
##
## Ends in an error in state: 166.
##
## expr -> expr And . expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr And
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id And False Quote
##
## Ends in an error in state: 167.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr And expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr And expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack Uppercase_id Comma With
##
## Ends in an error in state: 170.
##
## separated_nonempty_list(Comma,expr) -> expr Comma . separated_nonempty_list(Comma,expr) [ With Rpar Rbrack ]
##
## The known suffix of the stack is as follows:
## expr Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Begin With
##
## Ends in an error in state: 173.
##
## block -> Begin . nonempty_list(stmt) End [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Begin
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id With
##
## Ends in an error in state: 174.
##
## expr -> Lowercase_id . [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## ident -> Lowercase_id . [ Equal Colon ]
##
## The known suffix of the stack is as follows:
## Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun With
##
## Ends in an error in state: 175.
##
## expr -> Fun . parens(decl) Arrow_right block [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## stmt -> Fun . ident parens(decl) option(return_annot) Equal block [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id With
##
## Ends in an error in state: 176.
##
## stmt -> Fun ident . parens(decl) option(return_annot) Equal block [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar With
##
## Ends in an error in state: 177.
##
## stmt -> Fun ident parens(decl) . option(return_annot) Equal block [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun ident parens(decl)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar Arrow_right With
##
## Ends in an error in state: 178.
##
## option(return_annot) -> Arrow_right . build_type_list [ Equal ]
##
## The known suffix of the stack is as follows:
## Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar Arrow_right Lowercase_id Uppercase_id
##
## Ends in an error in state: 180.
##
## stmt -> Fun ident parens(decl) option(return_annot) . Equal block [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun ident parens(decl) option(return_annot)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
## In state 179, spurious reduction of production option(return_annot) -> Arrow_right build_type_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar Equal With
##
## Ends in an error in state: 181.
##
## stmt -> Fun ident parens(decl) option(return_annot) Equal . block [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun ident parens(decl) option(return_annot) Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal False Quote
##
## Ends in an error in state: 182.
##
## block -> expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Uppercase_id With
##
## Ends in an error in state: 184.
##
## nonempty_list(stmt) -> stmt . [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
## nonempty_list(stmt) -> stmt . nonempty_list(stmt) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## stmt
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 182, spurious reduction of production block -> expr
## In state 189, spurious reduction of production stmt -> ident option(type_expr) Equal block
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Rpar
##
## Ends in an error in state: 187.
##
## stmt -> ident option(type_expr) . Equal block [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## ident option(type_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
## In state 104, spurious reduction of production option(type_expr) -> Colon build_type_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal With
##
## Ends in an error in state: 188.
##
## stmt -> ident option(type_expr) Equal . block [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## ident option(type_expr) Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id With
##
## Ends in an error in state: 190.
##
## expr -> expr . Plus_i expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ Uppercase_id U8 Type True String_lit Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f And ]
## stmt -> expr . [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Builtin_id ]
##
## The known suffix of the stack is as follows:
## expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Begin Lowercase_id Type
##
## Ends in an error in state: 191.
##
## block -> Begin nonempty_list(stmt) . End [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Begin nonempty_list(stmt)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 174, spurious reduction of production expr -> Lowercase_id
## In state 190, spurious reduction of production stmt -> expr
## In state 184, spurious reduction of production nonempty_list(stmt) -> stmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id With
##
## Ends in an error in state: 194.
##
## expr -> expr . Plus_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> If expr . Then block list(elif) option(elseblk) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## If expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then With
##
## Ends in an error in state: 195.
##
## expr -> If expr Then . block list(elif) option(elseblk) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## If expr Then
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Begin Lowercase_id End Quote
##
## Ends in an error in state: 196.
##
## expr -> If expr Then block . list(elif) option(elseblk) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## If expr Then block
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Elseif With
##
## Ends in an error in state: 197.
##
## list(elif) -> Elseif . expr Then block list(elif) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Elseif
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Elseif Uppercase_id With
##
## Ends in an error in state: 198.
##
## expr -> expr . Plus_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ Then Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## list(elif) -> Elseif expr . Then block list(elif) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Elseif expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Elseif Uppercase_id Then With
##
## Ends in an error in state: 199.
##
## list(elif) -> Elseif expr Then . block list(elif) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Elseif expr Then
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Elseif Uppercase_id Then Begin Lowercase_id End Quote
##
## Ends in an error in state: 200.
##
## list(elif) -> Elseif expr Then block . list(elif) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Elseif expr Then block
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Else With
##
## Ends in an error in state: 203.
##
## option(elseblk) -> Else . block [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Else
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal Uppercase_id With
##
## Ends in an error in state: 206.
##
## expr -> expr . Plus_i expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f And ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal expr . [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal expr . Comma separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Equal expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal Uppercase_id Comma With
##
## Ends in an error in state: 207.
##
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal expr Comma . separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Equal expr Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Comma With
##
## Ends in an error in state: 209.
##
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Comma . separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack Uppercase_id With
##
## Ends in an error in state: 213.
##
## vector_lit -> Lbrack loption(separated_nonempty_list(Comma,expr)) . Rbrack [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lbrack loption(separated_nonempty_list(Comma,expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 121, spurious reduction of production separated_nonempty_list(Comma,expr) -> expr
## In state 118, spurious reduction of production loption(separated_nonempty_list(Comma,expr)) -> separated_nonempty_list(Comma,expr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lpar Uppercase_id With
##
## Ends in an error in state: 215.
##
## expr -> expr . Plus_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ Rpar Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f And ]
## expr -> Lpar expr . Rpar [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Lpar expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id Rpar
##
## Ends in an error in state: 217.
##
## expr -> Match separated_nonempty_list(Comma,expr) . With Begin nonempty_list(clause) End [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Match separated_nonempty_list(Comma,expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 121, spurious reduction of production separated_nonempty_list(Comma,expr) -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With With
##
## Ends in an error in state: 218.
##
## expr -> Match separated_nonempty_list(Comma,expr) With . Begin nonempty_list(clause) End [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Match separated_nonempty_list(Comma,expr) With
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin With
##
## Ends in an error in state: 219.
##
## expr -> Match separated_nonempty_list(Comma,expr) With Begin . nonempty_list(clause) End [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Match separated_nonempty_list(Comma,expr) With Begin
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Wildcard With
##
## Ends in an error in state: 220.
##
## nonempty_list(clause) -> Wildcard . Arrow_right block [ End ]
## nonempty_list(clause) -> Wildcard . Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block [ End ]
## nonempty_list(clause) -> Wildcard . Arrow_right block nonempty_list(clause) [ End ]
## nonempty_list(clause) -> Wildcard . Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Wildcard
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Wildcard Comma With
##
## Ends in an error in state: 221.
##
## nonempty_list(clause) -> Wildcard Comma . separated_nonempty_list(Comma,pattern_item) Arrow_right block [ End ]
## nonempty_list(clause) -> Wildcard Comma . separated_nonempty_list(Comma,pattern_item) Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Wildcard Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Wildcard With
##
## Ends in an error in state: 222.
##
## separated_nonempty_list(Comma,pattern_item) -> Wildcard . [ Rpar Arrow_right ]
## separated_nonempty_list(Comma,pattern_item) -> Wildcard . Comma separated_nonempty_list(Comma,pattern_item) [ Rpar Arrow_right ]
##
## The known suffix of the stack is as follows:
## Wildcard
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Wildcard Comma With
##
## Ends in an error in state: 223.
##
## separated_nonempty_list(Comma,pattern_item) -> Wildcard Comma . separated_nonempty_list(Comma,pattern_item) [ Rpar Arrow_right ]
##
## The known suffix of the stack is as follows:
## Wildcard Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Lowercase_id With
##
## Ends in an error in state: 224.
##
## separated_nonempty_list(Comma,pattern_item) -> Lowercase_id . [ Rpar Arrow_right ]
## separated_nonempty_list(Comma,pattern_item) -> Lowercase_id . Comma separated_nonempty_list(Comma,pattern_item) [ Rpar Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Lowercase_id Comma With
##
## Ends in an error in state: 225.
##
## separated_nonempty_list(Comma,pattern_item) -> Lowercase_id Comma . separated_nonempty_list(Comma,pattern_item) [ Rpar Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Uppercase_id With
##
## Ends in an error in state: 227.
##
## separated_nonempty_list(Comma,pattern_item) -> ctor . option(parens_single(pattern)) [ Rpar Arrow_right ]
## separated_nonempty_list(Comma,pattern_item) -> ctor . option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) [ Rpar Arrow_right ]
##
## The known suffix of the stack is as follows:
## ctor
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar With
##
## Ends in an error in state: 228.
##
## parens_single(pattern) -> Lpar . ctor option(parens_single(pattern)) Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar . Lowercase_id Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar . Wildcard Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar . ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar . Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar . Wildcard Comma separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Wildcard With
##
## Ends in an error in state: 229.
##
## parens_single(pattern) -> Lpar Wildcard . Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar Wildcard . Comma separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar Wildcard
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Wildcard Comma With
##
## Ends in an error in state: 231.
##
## parens_single(pattern) -> Lpar Wildcard Comma . separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar Wildcard Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Wildcard Comma Uppercase_id Arrow_right
##
## Ends in an error in state: 232.
##
## parens_single(pattern) -> Lpar Wildcard Comma separated_nonempty_list(Comma,pattern_item) . Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar Wildcard Comma separated_nonempty_list(Comma,pattern_item)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 227, spurious reduction of production option(parens_single(pattern)) ->
## In state 246, spurious reduction of production separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Lowercase_id With
##
## Ends in an error in state: 234.
##
## parens_single(pattern) -> Lpar Lowercase_id . Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar Lowercase_id . Comma separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Lowercase_id Comma With
##
## Ends in an error in state: 236.
##
## parens_single(pattern) -> Lpar Lowercase_id Comma . separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar Lowercase_id Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Lowercase_id Comma Uppercase_id Arrow_right
##
## Ends in an error in state: 237.
##
## parens_single(pattern) -> Lpar Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) . Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar Lowercase_id Comma separated_nonempty_list(Comma,pattern_item)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 227, spurious reduction of production option(parens_single(pattern)) ->
## In state 246, spurious reduction of production separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Uppercase_id With
##
## Ends in an error in state: 239.
##
## parens_single(pattern) -> Lpar ctor . option(parens_single(pattern)) Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar ctor . option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar ctor
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Uppercase_id Lpar Uppercase_id Rpar With
##
## Ends in an error in state: 241.
##
## parens_single(pattern) -> Lpar ctor option(parens_single(pattern)) . Rpar [ Rpar Comma Arrow_right ]
## parens_single(pattern) -> Lpar ctor option(parens_single(pattern)) . Comma separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Uppercase_id Comma With
##
## Ends in an error in state: 243.
##
## parens_single(pattern) -> Lpar ctor option(parens_single(pattern)) Comma . separated_nonempty_list(Comma,pattern_item) Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar ctor option(parens_single(pattern)) Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Uppercase_id Comma Uppercase_id Arrow_right
##
## Ends in an error in state: 244.
##
## parens_single(pattern) -> Lpar ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) . Rpar [ Rpar Comma Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 227, spurious reduction of production option(parens_single(pattern)) ->
## In state 246, spurious reduction of production separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Uppercase_id Lpar Uppercase_id Rpar With
##
## Ends in an error in state: 246.
##
## separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern)) . [ Rpar Arrow_right ]
## separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern)) . Comma separated_nonempty_list(Comma,pattern_item) [ Rpar Arrow_right ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Uppercase_id Comma With
##
## Ends in an error in state: 247.
##
## separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern)) Comma . separated_nonempty_list(Comma,pattern_item) [ Rpar Arrow_right ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern)) Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Wildcard Comma Uppercase_id Rpar
##
## Ends in an error in state: 250.
##
## nonempty_list(clause) -> Wildcard Comma separated_nonempty_list(Comma,pattern_item) . Arrow_right block [ End ]
## nonempty_list(clause) -> Wildcard Comma separated_nonempty_list(Comma,pattern_item) . Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Wildcard Comma separated_nonempty_list(Comma,pattern_item)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 227, spurious reduction of production option(parens_single(pattern)) ->
## In state 246, spurious reduction of production separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Wildcard Comma Uppercase_id Arrow_right With
##
## Ends in an error in state: 251.
##
## nonempty_list(clause) -> Wildcard Comma separated_nonempty_list(Comma,pattern_item) Arrow_right . block [ End ]
## nonempty_list(clause) -> Wildcard Comma separated_nonempty_list(Comma,pattern_item) Arrow_right . block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Wildcard Comma separated_nonempty_list(Comma,pattern_item) Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Wildcard Comma Uppercase_id Arrow_right Uppercase_id With
##
## Ends in an error in state: 252.
##
## nonempty_list(clause) -> Wildcard Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block . [ End ]
## nonempty_list(clause) -> Wildcard Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block . nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Wildcard Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 182, spurious reduction of production block -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id With
##
## Ends in an error in state: 253.
##
## nonempty_list(clause) -> Lowercase_id . Arrow_right block [ End ]
## nonempty_list(clause) -> Lowercase_id . Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block [ End ]
## nonempty_list(clause) -> Lowercase_id . Arrow_right block nonempty_list(clause) [ End ]
## nonempty_list(clause) -> Lowercase_id . Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma With
##
## Ends in an error in state: 254.
##
## nonempty_list(clause) -> Lowercase_id Comma . separated_nonempty_list(Comma,pattern_item) Arrow_right block [ End ]
## nonempty_list(clause) -> Lowercase_id Comma . separated_nonempty_list(Comma,pattern_item) Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Uppercase_id Rpar
##
## Ends in an error in state: 255.
##
## nonempty_list(clause) -> Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) . Arrow_right block [ End ]
## nonempty_list(clause) -> Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) . Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Comma separated_nonempty_list(Comma,pattern_item)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 227, spurious reduction of production option(parens_single(pattern)) ->
## In state 246, spurious reduction of production separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Uppercase_id Arrow_right With
##
## Ends in an error in state: 256.
##
## nonempty_list(clause) -> Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) Arrow_right . block [ End ]
## nonempty_list(clause) -> Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) Arrow_right . block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Comma Uppercase_id Arrow_right Uppercase_id With
##
## Ends in an error in state: 257.
##
## nonempty_list(clause) -> Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block . [ End ]
## nonempty_list(clause) -> Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block . nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 182, spurious reduction of production block -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id With
##
## Ends in an error in state: 259.
##
## nonempty_list(clause) -> ctor . option(parens_single(pattern)) Arrow_right block [ End ]
## nonempty_list(clause) -> ctor . option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block [ End ]
## nonempty_list(clause) -> ctor . option(parens_single(pattern)) Arrow_right block nonempty_list(clause) [ End ]
## nonempty_list(clause) -> ctor . option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## ctor
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Lpar Uppercase_id Rpar With
##
## Ends in an error in state: 260.
##
## nonempty_list(clause) -> ctor option(parens_single(pattern)) . Arrow_right block [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) . Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) . Arrow_right block nonempty_list(clause) [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) . Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Comma With
##
## Ends in an error in state: 261.
##
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Comma . separated_nonempty_list(Comma,pattern_item) Arrow_right block [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Comma . separated_nonempty_list(Comma,pattern_item) Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern)) Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Comma Uppercase_id Rpar
##
## Ends in an error in state: 262.
##
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) . Arrow_right block [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) . Arrow_right block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 227, spurious reduction of production option(parens_single(pattern)) ->
## In state 246, spurious reduction of production separated_nonempty_list(Comma,pattern_item) -> ctor option(parens_single(pattern))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Comma Uppercase_id Arrow_right With
##
## Ends in an error in state: 263.
##
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Arrow_right . block [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Arrow_right . block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Comma Uppercase_id Arrow_right Uppercase_id With
##
## Ends in an error in state: 264.
##
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block . [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block . nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern)) Comma separated_nonempty_list(Comma,pattern_item) Arrow_right block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 182, spurious reduction of production block -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Arrow_right With
##
## Ends in an error in state: 266.
##
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Arrow_right . block [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Arrow_right . block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern)) Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Uppercase_id Arrow_right Uppercase_id With
##
## Ends in an error in state: 267.
##
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Arrow_right block . [ End ]
## nonempty_list(clause) -> ctor option(parens_single(pattern)) Arrow_right block . nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## ctor option(parens_single(pattern)) Arrow_right block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 182, spurious reduction of production block -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Arrow_right With
##
## Ends in an error in state: 269.
##
## nonempty_list(clause) -> Lowercase_id Arrow_right . block [ End ]
## nonempty_list(clause) -> Lowercase_id Arrow_right . block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Lowercase_id Arrow_right Uppercase_id With
##
## Ends in an error in state: 270.
##
## nonempty_list(clause) -> Lowercase_id Arrow_right block . [ End ]
## nonempty_list(clause) -> Lowercase_id Arrow_right block . nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Arrow_right block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 182, spurious reduction of production block -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Wildcard Arrow_right With
##
## Ends in an error in state: 273.
##
## nonempty_list(clause) -> Wildcard Arrow_right . block [ End ]
## nonempty_list(clause) -> Wildcard Arrow_right . block nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Wildcard Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Match Uppercase_id With Begin Wildcard Arrow_right Uppercase_id With
##
## Ends in an error in state: 274.
##
## nonempty_list(clause) -> Wildcard Arrow_right block . [ End ]
## nonempty_list(clause) -> Wildcard Arrow_right block . nonempty_list(clause) [ End ]
##
## The known suffix of the stack is as follows:
## Wildcard Arrow_right block
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 127, spurious reduction of production option(parens_single(expr)) ->
## In state 169, spurious reduction of production expr -> ctor option(parens_single(expr))
## In state 182, spurious reduction of production block -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_f False Quote
##
## Ends in an error in state: 278.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> Minus_f expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Minus_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_i False Quote
##
## Ends in an error in state: 279.
##
## expr -> expr . Plus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_i expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Plus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Minus_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Mult_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Div_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Less_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Greater_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Bin_equal_f expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . And expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Or expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> Minus_i expr . [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . parens(expr) [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Dot Lowercase_id [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_head expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
## expr -> expr . Pipe_tail expr [ With Wildcard Uppercase_id U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Pipe_head Or Mult_i Mult_f Minus_i Minus_f Match Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f And ]
##
## The known suffix of the stack is as follows:
## Minus_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External With
##
## Ends in an error in state: 280.
##
## top_item -> External . ident Colon build_type_list Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External . ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External . ident Colon build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External
##

Functions must have lowercase names. Use the following form: 'external schmu_name : <type> = "CName"'

prog: External Lowercase_id With
##
## Ends in an error in state: 281.
##
## top_item -> External ident . Colon build_type_list Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident . Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident . Colon build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon With
##
## Ends in an error in state: 282.
##
## top_item -> External ident Colon . build_type_list Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident Colon . Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident Colon . build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar With
##
## Ends in an error in state: 283.
##
## top_item -> External ident Colon Lpar . separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar With
##
## Ends in an error in state: 285.
##
## top_item -> External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar . Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right With
##
## Ends in an error in state: 286.
##
## top_item -> External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right . build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id Rpar
##
## Ends in an error in state: 287.
##
## top_item -> External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list . option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Equal With
##
## Ends in an error in state: 288.
##
## option(external_cname) -> Equal . String_lit [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Rpar
##
## Ends in an error in state: 291.
##
## top_item -> External ident Colon build_type_list . Arrow_right build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident Colon build_type_list . option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Arrow_right With
##
## Ends in an error in state: 292.
##
## top_item -> External ident Colon build_type_list Arrow_right . build_type_list option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id Rpar
##
## Ends in an error in state: 293.
##
## top_item -> External ident Colon build_type_list Arrow_right build_type_list . option(external_cname) [ Uppercase_id U8 Type True String_lit Minus_i Minus_f Match Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon build_type_list Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 14, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id End
##
## Ends in an error in state: 296.
##
## list(top_item) -> top_item . list(top_item) [ Eof ]
##
## The known suffix of the stack is as follows:
## top_item
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 174, spurious reduction of production expr -> Lowercase_id
## In state 190, spurious reduction of production stmt -> expr
## In state 184, spurious reduction of production nonempty_list(stmt) -> stmt
## In state 297, spurious reduction of production top_item -> nonempty_list(stmt)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

