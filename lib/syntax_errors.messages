prog: Uppercase_id
##
## Ends in an error in state: 0.
##
## prog' -> . prog [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Uppercase_id
##
## Ends in an error in state: 2.
##
## top_item -> Type . Lowercase_id option(typedef_poly_id) Equal Lbrac separated_nonempty_list(Comma,type_decl) Rbrac [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type . Lowercase_id option(typedef_poly_id) Equal build_type_list [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type
##

Type names must be lowercase

prog: Type Lowercase_id Uppercase_id
##
## Ends in an error in state: 3.
##
## top_item -> Type Lowercase_id . option(typedef_poly_id) Equal Lbrac separated_nonempty_list(Comma,type_decl) Rbrac [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id . option(typedef_poly_id) Equal build_type_list [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar Uppercase_id
##
## Ends in an error in state: 4.
##
## option(typedef_poly_id) -> Lpar . Quote Lowercase_id Rpar [ Equal ]
##
## The known suffix of the stack is as follows:
## Lpar
##

Type variables are denoted with " ' ". Try 'a instead of a for type variables

prog: Type Lowercase_id Lpar Quote Uppercase_id
##
## Ends in an error in state: 5.
##
## option(typedef_poly_id) -> Lpar Quote . Lowercase_id Rpar [ Equal ]
##
## The known suffix of the stack is as follows:
## Lpar Quote
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar Quote Lowercase_id Uppercase_id
##
## Ends in an error in state: 6.
##
## option(typedef_poly_id) -> Lpar Quote Lowercase_id . Rpar [ Equal ]
##
## The known suffix of the stack is as follows:
## Lpar Quote Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar Quote Lowercase_id Rpar Uppercase_id
##
## Ends in an error in state: 8.
##
## top_item -> Type Lowercase_id option(typedef_poly_id) . Equal Lbrac separated_nonempty_list(Comma,type_decl) Rbrac [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id option(typedef_poly_id) . Equal build_type_list [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type Lowercase_id option(typedef_poly_id)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id
##
## Ends in an error in state: 9.
##
## top_item -> Type Lowercase_id option(typedef_poly_id) Equal . Lbrac separated_nonempty_list(Comma,type_decl) Rbrac [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> Type Lowercase_id option(typedef_poly_id) Equal . build_type_list [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type Lowercase_id option(typedef_poly_id) Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Uppercase_id
##
## Ends in an error in state: 10.
##
## build_type_list -> Quote . Lowercase_id Lpar build_type_list Rpar [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
## build_type_list -> Quote . Lowercase_id [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Quote
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id Uppercase_id
##
## Ends in an error in state: 11.
##
## build_type_list -> Quote Lowercase_id . Lpar build_type_list Rpar [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
## build_type_list -> Quote Lowercase_id . [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Quote Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id Lpar Uppercase_id
##
## Ends in an error in state: 12.
##
## build_type_list -> Quote Lowercase_id Lpar . build_type_list Rpar [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Quote Lowercase_id Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Uppercase_id
##
## Ends in an error in state: 13.
##
## build_type_list -> Lowercase_id . Lpar build_type_list Rpar [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
## build_type_list -> Lowercase_id . [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Lpar Uppercase_id
##
## Ends in an error in state: 14.
##
## build_type_list -> Lowercase_id Lpar . build_type_list Rpar [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Lpar Lowercase_id U8
##
## Ends in an error in state: 15.
##
## build_type_list -> Lowercase_id Lpar build_type_list . Rpar [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Lpar build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id Lpar Lowercase_id U8
##
## Ends in an error in state: 17.
##
## build_type_list -> Quote Lowercase_id Lpar build_type_list . Rpar [ U8 Type True String_lit Rpar Rbrac Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Equal Eof Comma Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Quote Lowercase_id Lpar build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Uppercase_id
##
## Ends in an error in state: 19.
##
## top_item -> Type Lowercase_id option(typedef_poly_id) Equal Lbrac . separated_nonempty_list(Comma,type_decl) Rbrac [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Type Lowercase_id option(typedef_poly_id) Equal Lbrac
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Mutable Uppercase_id
##
## Ends in an error in state: 23.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon build_type_list Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon build_type_list Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) . Lowercase_id Colon build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Uppercase_id
##
## Ends in an error in state: 24.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon build_type_list Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon build_type_list Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id . Colon build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id
##

Record type declarations have the following form: type id = { field : <type> }

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Uppercase_id
##
## Ends in an error in state: 25.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . build_type_list Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . build_type_list Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon . build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Uppercase_id
##
## Ends in an error in state: 26.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar . separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar . separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Uppercase_id
##
## Ends in an error in state: 27.
##
## separated_nonempty_list(Comma,type_func) -> Lpar . separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> Lpar . separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Uppercase_id
##
## Ends in an error in state: 29.
##
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar . Arrow_right build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar . Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar separated_nonempty_list(Comma,type_list) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right Uppercase_id
##
## Ends in an error in state: 30.
##
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right . build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right . build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right Lowercase_id U8
##
## Ends in an error in state: 31.
##
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list . [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list . Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 32.
##
## separated_nonempty_list(Comma,type_func) -> Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list Comma . separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## Lpar separated_nonempty_list(Comma,type_list) Rpar Arrow_right build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id U8
##
## Ends in an error in state: 34.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list . Arrow_right build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list . [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list . Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list . Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 35.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list Comma . separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right Uppercase_id
##
## Ends in an error in state: 37.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right . build_type_list [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right . build_type_list Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right Lowercase_id U8
##
## Ends in an error in state: 38.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right build_type_list . [ Rpar ]
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right build_type_list . Comma separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 39.
##
## separated_nonempty_list(Comma,type_func) -> build_type_list Arrow_right build_type_list Comma . separated_nonempty_list(Comma,type_func) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Arrow_right build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id U8
##
## Ends in an error in state: 41.
##
## separated_nonempty_list(Comma,type_list) -> build_type_list . [ Rpar ]
## separated_nonempty_list(Comma,type_list) -> build_type_list . Comma separated_nonempty_list(Comma,type_list) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 42.
##
## separated_nonempty_list(Comma,type_list) -> build_type_list Comma . separated_nonempty_list(Comma,type_list) [ Rpar ]
##
## The known suffix of the stack is as follows:
## build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Uppercase_id
##
## Ends in an error in state: 45.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar . Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar . Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Uppercase_id
##
## Ends in an error in state: 46.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right . build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right . build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id U8
##
## Ends in an error in state: 47.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list . [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list . Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 48.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma . separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id U8
##
## Ends in an error in state: 50.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list . Arrow_right build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list . [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list . Arrow_right build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list . Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 51.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Comma . separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right Uppercase_id
##
## Ends in an error in state: 53.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right . build_type_list [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right . build_type_list Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id U8
##
## Ends in an error in state: 54.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list . [ Rbrac ]
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list . Comma separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 55.
##
## separated_nonempty_list(Comma,type_decl) -> boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list Comma . separated_nonempty_list(Comma,type_decl) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## boption(Mutable) Lowercase_id Colon build_type_list Arrow_right build_type_list Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_i Uppercase_id
##
## Ends in an error in state: 60.
##
## expr -> Minus_i . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Minus_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_f Uppercase_id
##
## Ends in an error in state: 61.
##
## expr -> Minus_f . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Minus_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lpar Uppercase_id
##
## Ends in an error in state: 62.
##
## expr -> Lpar . Rpar [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> Lpar . expr Rpar [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack Uppercase_id
##
## Ends in an error in state: 65.
##
## vector_lit -> Lbrack . loption(separated_nonempty_list(Comma,expr)) Rbrack [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Lbrack
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Uppercase_id
##
## Ends in an error in state: 66.
##
## expr -> Lbrac . separated_nonempty_list(Comma,record_item) Rbrac [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Lbrac
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Uppercase_id
##
## Ends in an error in state: 67.
##
## separated_nonempty_list(Comma,record_item) -> Lowercase_id . Equal expr [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id . [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id . Equal expr Comma separated_nonempty_list(Comma,record_item) [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id . Comma separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal Uppercase_id
##
## Ends in an error in state: 68.
##
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal . expr [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal . expr Comma separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id
##
## Ends in an error in state: 70.
##
## expr -> If . expr Then nonempty_list(stmt) list(elif) Else nonempty_list(stmt) End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## If
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Fun Uppercase_id
##
## Ends in an error in state: 72.
##
## expr -> Fun . parens(decl) option(return_annot) nonempty_list(stmt) End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Fun
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Uppercase_id
##
## Ends in an error in state: 73.
##
## parens(decl) -> Lpar . loption(separated_nonempty_list(Comma,decl)) Rpar [ U8 True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 Builtin_id Arrow_right ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id Uppercase_id
##
## Ends in an error in state: 78.
##
## separated_nonempty_list(Comma,decl) -> ident . option(type_expr) [ Rpar ]
## separated_nonempty_list(Comma,decl) -> ident . option(type_expr) Comma separated_nonempty_list(Comma,decl) [ Rpar ]
##
## The known suffix of the stack is as follows:
## ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Uppercase_id
##
## Ends in an error in state: 79.
##
## option(type_expr) -> Colon . build_type_list Arrow_right build_type_list [ Rpar Equal Comma ]
## option(type_expr) -> Colon . Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rpar Equal Comma ]
## option(type_expr) -> Colon . build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Uppercase_id
##
## Ends in an error in state: 80.
##
## option(type_expr) -> Colon Lpar . separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Rpar Uppercase_id
##
## Ends in an error in state: 82.
##
## option(type_expr) -> Colon Lpar separated_nonempty_list(Comma,type_func) Rpar . Arrow_right build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon Lpar separated_nonempty_list(Comma,type_func) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Uppercase_id
##
## Ends in an error in state: 83.
##
## option(type_expr) -> Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right . build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id U8
##
## Ends in an error in state: 85.
##
## option(type_expr) -> Colon build_type_list . Arrow_right build_type_list [ Rpar Equal Comma ]
## option(type_expr) -> Colon build_type_list . [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Arrow_right Uppercase_id
##
## Ends in an error in state: 86.
##
## option(type_expr) -> Colon build_type_list Arrow_right . build_type_list [ Rpar Equal Comma ]
##
## The known suffix of the stack is as follows:
## Colon build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id Colon Lowercase_id Equal
##
## Ends in an error in state: 88.
##
## separated_nonempty_list(Comma,decl) -> ident option(type_expr) . [ Rpar ]
## separated_nonempty_list(Comma,decl) -> ident option(type_expr) . Comma separated_nonempty_list(Comma,decl) [ Rpar ]
##
## The known suffix of the stack is as follows:
## ident option(type_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
## In state 85, spurious reduction of production option(type_expr) -> Colon build_type_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 89.
##
## separated_nonempty_list(Comma,decl) -> ident option(type_expr) Comma . separated_nonempty_list(Comma,decl) [ Rpar ]
##
## The known suffix of the stack is as follows:
## ident option(type_expr) Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar Uppercase_id
##
## Ends in an error in state: 91.
##
## expr -> Fun parens(decl) . option(return_annot) nonempty_list(stmt) End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Fun parens(decl)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar Arrow_right Uppercase_id
##
## Ends in an error in state: 92.
##
## option(return_annot) -> Arrow_right . build_type_list [ U8 True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 Builtin_id ]
##
## The known suffix of the stack is as follows:
## Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar Arrow_right Lowercase_id Type
##
## Ends in an error in state: 94.
##
## expr -> Fun parens(decl) option(return_annot) . nonempty_list(stmt) End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Fun parens(decl) option(return_annot)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
## In state 93, spurious reduction of production option(return_annot) -> Arrow_right build_type_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Uppercase_id
##
## Ends in an error in state: 95.
##
## expr -> Lowercase_id . [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## ident -> Lowercase_id . [ Equal Colon ]
##
## The known suffix of the stack is as follows:
## Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Uppercase_id
##
## Ends in an error in state: 96.
##
## expr -> Fun . parens(decl) option(return_annot) nonempty_list(stmt) End [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## stmt -> Fun . ident parens(decl) option(return_annot) nonempty_list(stmt) End [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun
##

Function names must be lowercase

prog: Fun Lowercase_id Uppercase_id
##
## Ends in an error in state: 97.
##
## stmt -> Fun ident . parens(decl) option(return_annot) nonempty_list(stmt) End [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar Uppercase_id
##
## Ends in an error in state: 98.
##
## stmt -> Fun ident parens(decl) . option(return_annot) nonempty_list(stmt) End [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun ident parens(decl)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar Arrow_right Lowercase_id Type
##
## Ends in an error in state: 99.
##
## stmt -> Fun ident parens(decl) option(return_annot) . nonempty_list(stmt) End [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun ident parens(decl) option(return_annot)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
## In state 93, spurious reduction of production option(return_annot) -> Arrow_right build_type_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Builtin_id Uppercase_id
##
## Ends in an error in state: 103.
##
## expr -> Builtin_id . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Builtin_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Lpar Uppercase_id
##
## Ends in an error in state: 104.
##
## parens(expr) -> Lpar . loption(separated_nonempty_list(Comma,expr)) Rpar [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Lpar False Rbrack
##
## Ends in an error in state: 107.
##
## parens(expr) -> Lpar loption(separated_nonempty_list(Comma,expr)) . Rpar [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Lpar loption(separated_nonempty_list(Comma,expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 109, spurious reduction of production separated_nonempty_list(Comma,expr) -> expr
## In state 106, spurious reduction of production loption(separated_nonempty_list(Comma,expr)) -> separated_nonempty_list(Comma,expr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack False U8
##
## Ends in an error in state: 109.
##
## expr -> expr . Plus_i expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ Rpar Rbrack Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## separated_nonempty_list(Comma,expr) -> expr . [ Rpar Rbrack ]
## separated_nonempty_list(Comma,expr) -> expr . Comma separated_nonempty_list(Comma,expr) [ Rpar Rbrack ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Plus_i Uppercase_id
##
## Ends in an error in state: 110.
##
## expr -> expr Plus_i . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Plus_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Plus_i False Uppercase_id
##
## Ends in an error in state: 111.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Plus_i expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Plus_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Pipe_tail Uppercase_id
##
## Ends in an error in state: 112.
##
## expr -> expr Pipe_tail . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Pipe_tail
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Pipe_tail False Uppercase_id
##
## Ends in an error in state: 113.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Pipe_tail expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Pipe_tail expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Mult_i Uppercase_id
##
## Ends in an error in state: 116.
##
## expr -> expr Mult_i . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Mult_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Mult_i False Uppercase_id
##
## Ends in an error in state: 117.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Mult_i expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Mult_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Dot Uppercase_id
##
## Ends in an error in state: 118.
##
## expr -> expr Dot . Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Dot . Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Dot
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Dot Lowercase_id Uppercase_id
##
## Ends in an error in state: 119.
##
## expr -> expr Dot Lowercase_id . Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Dot Lowercase_id . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Dot Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Dot Lowercase_id Arrow_left Uppercase_id
##
## Ends in an error in state: 120.
##
## expr -> expr Dot Lowercase_id Arrow_left . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Dot Lowercase_id Arrow_left
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Dot Lowercase_id Arrow_left False Uppercase_id
##
## Ends in an error in state: 121.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Dot Lowercase_id Arrow_left expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Dot Lowercase_id Arrow_left expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Plus_f Uppercase_id
##
## Ends in an error in state: 122.
##
## expr -> expr Plus_f . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Plus_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Plus_f False Uppercase_id
##
## Ends in an error in state: 123.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Plus_f expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Plus_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Mult_f Uppercase_id
##
## Ends in an error in state: 124.
##
## expr -> expr Mult_f . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Mult_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Mult_f False Uppercase_id
##
## Ends in an error in state: 125.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Mult_f expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Mult_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Bin_equal_i Uppercase_id
##
## Ends in an error in state: 126.
##
## expr -> expr Bin_equal_i . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Bin_equal_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Bin_equal_i False Uppercase_id
##
## Ends in an error in state: 127.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Bin_equal_i expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Bin_equal_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Arrow_right Uppercase_id
##
## Ends in an error in state: 128.
##
## expr -> expr Arrow_right . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Arrow_right False Uppercase_id
##
## Ends in an error in state: 129.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Arrow_right expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Arrow_right expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Bin_equal_f Uppercase_id
##
## Ends in an error in state: 130.
##
## expr -> expr Bin_equal_f . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Bin_equal_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Bin_equal_f False Uppercase_id
##
## Ends in an error in state: 131.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Bin_equal_f expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Bin_equal_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Div_i Uppercase_id
##
## Ends in an error in state: 132.
##
## expr -> expr Div_i . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Div_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Div_i False Uppercase_id
##
## Ends in an error in state: 133.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Div_i expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Div_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Div_f Uppercase_id
##
## Ends in an error in state: 134.
##
## expr -> expr Div_f . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Div_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Div_f False Uppercase_id
##
## Ends in an error in state: 135.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Div_f expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Div_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Or Uppercase_id
##
## Ends in an error in state: 136.
##
## expr -> expr Or . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Or
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Or False Uppercase_id
##
## Ends in an error in state: 137.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Or expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Or expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Minus_i Uppercase_id
##
## Ends in an error in state: 138.
##
## expr -> expr Minus_i . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Minus_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Minus_i False Uppercase_id
##
## Ends in an error in state: 139.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Minus_i expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Minus_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Minus_f Uppercase_id
##
## Ends in an error in state: 140.
##
## expr -> expr Minus_f . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Minus_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Minus_f False Uppercase_id
##
## Ends in an error in state: 141.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Minus_f expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Minus_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Less_i Uppercase_id
##
## Ends in an error in state: 142.
##
## expr -> expr Less_i . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Less_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Less_i False Uppercase_id
##
## Ends in an error in state: 143.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Less_i expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Less_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Less_f Uppercase_id
##
## Ends in an error in state: 144.
##
## expr -> expr Less_f . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Less_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Less_f False Uppercase_id
##
## Ends in an error in state: 145.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Less_f expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Less_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Greater_i Uppercase_id
##
## Ends in an error in state: 146.
##
## expr -> expr Greater_i . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Greater_i
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Greater_i False Uppercase_id
##
## Ends in an error in state: 147.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Greater_i expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Greater_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Greater_f Uppercase_id
##
## Ends in an error in state: 148.
##
## expr -> expr Greater_f . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Greater_f
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Greater_f False Uppercase_id
##
## Ends in an error in state: 149.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr Greater_f expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr Greater_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False And Uppercase_id
##
## Ends in an error in state: 150.
##
## expr -> expr And . expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr And
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False And False Uppercase_id
##
## Ends in an error in state: 151.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr And expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## expr And expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack False Comma Uppercase_id
##
## Ends in an error in state: 152.
##
## separated_nonempty_list(Comma,expr) -> expr Comma . separated_nonempty_list(Comma,expr) [ Rpar Rbrack ]
##
## The known suffix of the stack is as follows:
## expr Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Do End Uppercase_id
##
## Ends in an error in state: 155.
##
## nonempty_list(stmt) -> stmt . [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
## nonempty_list(stmt) -> stmt . nonempty_list(stmt) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## stmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Rpar
##
## Ends in an error in state: 158.
##
## stmt -> ident option(type_expr) . Equal exprblock [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## ident option(type_expr)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
## In state 85, spurious reduction of production option(type_expr) -> Colon build_type_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Uppercase_id
##
## Ends in an error in state: 159.
##
## stmt -> ident option(type_expr) Equal . exprblock [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## ident option(type_expr) Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Do Uppercase_id
##
## Ends in an error in state: 160.
##
## exprblock -> Do . list(stmt) End [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## Do
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Do False Type
##
## Ends in an error in state: 161.
##
## list(stmt) -> stmt . list(stmt) [ End ]
##
## The known suffix of the stack is as follows:
## stmt
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 163, spurious reduction of production stmt -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Then
##
## Ends in an error in state: 163.
##
## expr -> expr . Plus_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## stmt -> expr . [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal False Then
##
## Ends in an error in state: 167.
##
## expr -> expr . Plus_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True String_lit Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## exprblock -> expr . [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar False Type
##
## Ends in an error in state: 168.
##
## stmt -> Fun ident parens(decl) option(return_annot) nonempty_list(stmt) . End [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof End Elseif Else Builtin_id ]
##
## The known suffix of the stack is as follows:
## Fun ident parens(decl) option(return_annot) nonempty_list(stmt)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 163, spurious reduction of production stmt -> expr
## In state 155, spurious reduction of production nonempty_list(stmt) -> stmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar False Type
##
## Ends in an error in state: 170.
##
## expr -> Fun parens(decl) option(return_annot) nonempty_list(stmt) . End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Fun parens(decl) option(return_annot) nonempty_list(stmt)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 163, spurious reduction of production stmt -> expr
## In state 155, spurious reduction of production nonempty_list(stmt) -> stmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False U8
##
## Ends in an error in state: 172.
##
## expr -> expr . Plus_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> If expr . Then nonempty_list(stmt) list(elif) Else nonempty_list(stmt) End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## If expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False Then Uppercase_id
##
## Ends in an error in state: 173.
##
## expr -> If expr Then . nonempty_list(stmt) list(elif) Else nonempty_list(stmt) End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## If expr Then
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False Then False Type
##
## Ends in an error in state: 174.
##
## expr -> If expr Then nonempty_list(stmt) . list(elif) Else nonempty_list(stmt) End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## If expr Then nonempty_list(stmt)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 163, spurious reduction of production stmt -> expr
## In state 155, spurious reduction of production nonempty_list(stmt) -> stmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False Then False Elseif Uppercase_id
##
## Ends in an error in state: 175.
##
## list(elif) -> Elseif . expr Then nonempty_list(stmt) list(elif) [ Else ]
##
## The known suffix of the stack is as follows:
## Elseif
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False Then False Elseif False U8
##
## Ends in an error in state: 176.
##
## expr -> expr . Plus_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ Then Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## list(elif) -> Elseif expr . Then nonempty_list(stmt) list(elif) [ Else ]
##
## The known suffix of the stack is as follows:
## Elseif expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False Then False Elseif False Then Uppercase_id
##
## Ends in an error in state: 177.
##
## list(elif) -> Elseif expr Then . nonempty_list(stmt) list(elif) [ Else ]
##
## The known suffix of the stack is as follows:
## Elseif expr Then
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False Then False Elseif False Then False Type
##
## Ends in an error in state: 178.
##
## list(elif) -> Elseif expr Then nonempty_list(stmt) . list(elif) [ Else ]
##
## The known suffix of the stack is as follows:
## Elseif expr Then nonempty_list(stmt)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 163, spurious reduction of production stmt -> expr
## In state 155, spurious reduction of production nonempty_list(stmt) -> stmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False Then False Else Uppercase_id
##
## Ends in an error in state: 181.
##
## expr -> If expr Then nonempty_list(stmt) list(elif) Else . nonempty_list(stmt) End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## If expr Then nonempty_list(stmt) list(elif) Else
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If False Then False Else False Type
##
## Ends in an error in state: 182.
##
## expr -> If expr Then nonempty_list(stmt) list(elif) Else nonempty_list(stmt) . End [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## If expr Then nonempty_list(stmt) list(elif) Else nonempty_list(stmt)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 163, spurious reduction of production stmt -> expr
## In state 155, spurious reduction of production nonempty_list(stmt) -> stmt
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal False U8
##
## Ends in an error in state: 184.
##
## expr -> expr . Plus_i expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Comma Bin_equal_i Bin_equal_f Arrow_right And ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal expr . [ Rbrac ]
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal expr . Comma separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Equal expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal False Comma Uppercase_id
##
## Ends in an error in state: 185.
##
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Equal expr Comma . separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Equal expr Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Comma Uppercase_id
##
## Ends in an error in state: 187.
##
## separated_nonempty_list(Comma,record_item) -> Lowercase_id Comma . separated_nonempty_list(Comma,record_item) [ Rbrac ]
##
## The known suffix of the stack is as follows:
## Lowercase_id Comma
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack False Rpar
##
## Ends in an error in state: 191.
##
## vector_lit -> Lbrack loption(separated_nonempty_list(Comma,expr)) . Rbrack [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Lbrack loption(separated_nonempty_list(Comma,expr))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 109, spurious reduction of production separated_nonempty_list(Comma,expr) -> expr
## In state 106, spurious reduction of production loption(separated_nonempty_list(Comma,expr)) -> separated_nonempty_list(Comma,expr)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lpar False U8
##
## Ends in an error in state: 193.
##
## expr -> expr . Plus_i expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ Rpar Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Less_i Less_f Greater_i Greater_f Dot Div_i Div_f Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> Lpar expr . Rpar [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Lpar expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_f False Uppercase_id
##
## Ends in an error in state: 195.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> Minus_f expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Minus_f expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_i False Uppercase_id
##
## Ends in an error in state: 196.
##
## expr -> expr . Plus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_i expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Plus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Minus_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Mult_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Div_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Less_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Greater_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Bin_equal_f expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . And expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Or expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> Minus_i expr . [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . parens(expr) [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id Arrow_left expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Dot Lowercase_id [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Arrow_right expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
## expr -> expr . Pipe_tail expr [ U8 Type True Then String_lit Rpar Rbrack Rbrac Plus_i Plus_f Pipe_tail Or Mult_i Mult_f Minus_i Minus_f Lpar Lowercase_id Less_i Less_f Lbrack Lbrac Int If I32 Greater_i Greater_f Fun Float False F32 External Eof End Elseif Else Dot Div_i Div_f Comma Builtin_id Bin_equal_i Bin_equal_f Arrow_right And ]
##
## The known suffix of the stack is as follows:
## Minus_i expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Uppercase_id
##
## Ends in an error in state: 197.
##
## top_item -> External . ident Colon build_type_list Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External . ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External . ident Colon build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External
##

Functions must have lowercase names. Use the following form: 'external schmu_name : <type> = "CName"'

prog: External Lowercase_id Uppercase_id
##
## Ends in an error in state: 198.
##
## top_item -> External ident . Colon build_type_list Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident . Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident . Colon build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Uppercase_id
##
## Ends in an error in state: 199.
##
## top_item -> External ident Colon . build_type_list Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident Colon . Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident Colon . build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Uppercase_id
##
## Ends in an error in state: 200.
##
## top_item -> External ident Colon Lpar . separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon Lpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar Uppercase_id
##
## Ends in an error in state: 202.
##
## top_item -> External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar . Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Uppercase_id
##
## Ends in an error in state: 203.
##
## top_item -> External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right . build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id Rpar
##
## Ends in an error in state: 204.
##
## top_item -> External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list . option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon Lpar separated_nonempty_list(Comma,type_func) Rpar Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Equal Uppercase_id
##
## Ends in an error in state: 205.
##
## option(external_cname) -> Equal . String_lit [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## Equal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Rpar
##
## Ends in an error in state: 208.
##
## top_item -> External ident Colon build_type_list . Arrow_right build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
## top_item -> External ident Colon build_type_list . option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Arrow_right Uppercase_id
##
## Ends in an error in state: 209.
##
## top_item -> External ident Colon build_type_list Arrow_right . build_type_list option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon build_type_list Arrow_right
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id Rpar
##
## Ends in an error in state: 210.
##
## top_item -> External ident Colon build_type_list Arrow_right build_type_list . option(external_cname) [ U8 Type True String_lit Minus_i Minus_f Lpar Lowercase_id Lbrack Lbrac Int If I32 Fun Float False F32 External Eof Builtin_id ]
##
## The known suffix of the stack is as follows:
## External ident Colon build_type_list Arrow_right build_type_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production build_type_list -> Lowercase_id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False End
##
## Ends in an error in state: 213.
##
## list(top_item) -> top_item . list(top_item) [ Eof ]
##
## The known suffix of the stack is as follows:
## top_item
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 163, spurious reduction of production stmt -> expr
## In state 155, spurious reduction of production nonempty_list(stmt) -> stmt
## In state 214, spurious reduction of production top_item -> nonempty_list(stmt)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

