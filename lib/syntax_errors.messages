prog: Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar Uppercase_id

Type variables are denoted with " ' ". Try 'a instead of a for type variables

prog: Type Lowercase_id Lpar Quote Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar Quote Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Lpar Quote Lowercase_id Rpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal U8

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Lpar Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Quote Lowercase_id Lpar Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Mutable Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Uppercase_id

Record type declarations have the following form: type id = { field : <type> }

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Rpar Arrow_right Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Arrow_right Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lpar Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Lbrac Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lpar Lowercase_id Rpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lpar Lowercase_id Rpar Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lpar Lowercase_id Rpar Arrow_right Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lowercase_id Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lowercase_id Arrow_right Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Lpar Lowercase_id Rpar Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Type Lowercase_id Equal Uppercase_id Comma U8

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_i Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_f Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lpar Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Fun Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Rpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id Colon Lowercase_id Equal

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar Arrow_right Lowercase_id Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Uppercase_id

Function names must be lowercase

prog: Fun Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar Arrow_right Lowercase_id Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Builtin_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Lpar Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: False Lpar Uppercase_id Rbrack

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack Uppercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Plus_i Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Plus_i False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Pipe_tail Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Pipe_tail False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Lpar Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Lpar Uppercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Plus_f Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Plus_f False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Mult_i Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Mult_i False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Dot Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Dot Lowercase_id Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Dot Lowercase_id Arrow_left Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Dot Lowercase_id Arrow_left False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Or Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Or False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Mult_f Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Mult_f False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Bin_equal_i Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Bin_equal_i False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Arrow_right Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Arrow_right False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Bin_equal_f Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Bin_equal_f False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Minus_i Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Minus_i False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Div_i Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Div_i False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Div_f Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Div_f False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Minus_f Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Minus_f False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Less_i Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Less_i False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Less_f Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Less_f False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Greater_i Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Greater_i False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Greater_f Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Greater_f False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id And Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id And False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack Uppercase_id Comma Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Do End Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Colon Lowercase_id Rpar

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Do Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Do Uppercase_id Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lowercase_id Equal Uppercase_id Then

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lowercase_id Lpar Rpar Uppercase_id Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Fun Lpar Rpar Uppercase_id Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Elseif Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Elseif Uppercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Elseif Uppercase_id Then Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Elseif Uppercase_id Then Uppercase_id Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Else Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: If Uppercase_id Then Uppercase_id Else Uppercase_id Type

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal Uppercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Equal Uppercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrac Lowercase_id Comma Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lbrack Uppercase_id Rpar

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Lpar Uppercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_f False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Minus_i False Quote

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Uppercase_id

Functions must have lowercase names. Use the following form: 'external schmu_name : <type> = "CName"'

prog: External Lowercase_id Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lpar Lowercase_id Rpar Arrow_right Lowercase_id Rpar

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Equal Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Rpar

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Arrow_right Uppercase_id

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: External Lowercase_id Colon Lowercase_id Arrow_right Lowercase_id Rpar

<YOUR SYNTAX ERROR MESSAGE HERE>

prog: Uppercase_id End

<YOUR SYNTAX ERROR MESSAGE HERE>

