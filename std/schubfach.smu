-- implements the schubfach algorithm

import array
import int
import prelude
import string
import unsafe

use prelude

module float {
  let significand_size = 53
  let max_exponent = 1024
  let exponent_bias = max_exponent - 1 + (significand_size - 1)
  let max_ieee_exponent = (2 * max_exponent) - 1
  let hidden_bit = lshl(1, significand_size - 1)
  let significand_mask = hidden_bit - 1
  let exponent_mask = lshl(max_ieee_exponent, significand_size - 1)
  let sign_mask = lxor(0, -1) |> lshr(1) |> lxor(-1)

  fun reinterpret(f : float) {
    let f& = copy(f)
    let i : int = unsafe/(addr(&f) |> reinterpret() |> get(0))
    i
  }

  fun physical_significand(f) {
    reinterpret(f) |> land(significand_mask)
  }

  fun physical_exponent(f) {
    (reinterpret(f) |> land(exponent_mask)) |> lshr(significand_size - 1)
  }

  fun is_finite(f) {
    (reinterpret(f) |> land(exponent_mask)) <> exponent_mask
  }

  fun is_inf(f) {
    ((reinterpret(f) |> land(exponent_mask)) == exponent_mask) and
    ((reinterpret(f) |> land(significand_mask)) == 0)
  }

  fun is_nan(f) {
    ((reinterpret(f) |> land(exponent_mask)) == exponent_mask) and
    ((reinterpret(f) |> land(significand_mask)) <> 0)
  }

  fun is_zero(f) {
    (reinterpret(f) |> land(lxor(sign_mask, -1))) == 0
  }

  fun sign_bit(f) {
    (reinterpret(f) |> land(sign_mask)) <> 0
  }
}

use float

-- print1("is zero: {}\n", bool, is_zero(0.0))
-- print1("is inf: {}\n", bool, is_inf(1.0 /. 0.0))
-- print1("is nan: {}\n", bool, is_nan(0.0 /. 0.0))
-- print1("is finite: {}\n", bool, is_finite(0.0))
-- print1("has sign bit: {}\n", bool, sign_bit(1.0))
-- print1("has sign bit: {}\n", bool, sign_bit(-1.0))

type uint64x2 = { hi : int, lo : int }

fun compute_pow10_double(k) {
  let pow10_tbl = #[
    { hi = 0xFF77B1FCBEBCDC4F, lo = 0x25E8E89C13BB0F7B }, -- -292
    { hi = 0x9FAACF3DF73609B1, lo = 0x77B191618C54E9AD }, -- -291
    { hi = 0xC795830D75038C1D, lo = 0xD59DF5B9EF6A2418 }, -- -290
    { hi = 0xF97AE3D0D2446F25, lo = 0x4B0573286B44AD1E }, -- -289
    { hi = 0x9BECCE62836AC577, lo = 0x4EE367F9430AEC33 }, -- -288
    { hi = 0xC2E801FB244576D5, lo = 0x229C41F793CDA740 }, -- -287
    { hi = 0xF3A20279ED56D48A, lo = 0x6B43527578C11110 }, -- -286
    { hi = 0x9845418C345644D6, lo = 0x830A13896B78AAAA }, -- -285
    { hi = 0xBE5691EF416BD60C, lo = 0x23CC986BC656D554 }, -- -284
    { hi = 0xEDEC366B11C6CB8F, lo = 0x2CBFBE86B7EC8AA9 }, -- -283
    { hi = 0x94B3A202EB1C3F39, lo = 0x7BF7D71432F3D6AA }, -- -282
    { hi = 0xB9E08A83A5E34F07, lo = 0xDAF5CCD93FB0CC54 }, -- -281
    { hi = 0xE858AD248F5C22C9, lo = 0xD1B3400F8F9CFF69 }, -- -280
    { hi = 0x91376C36D99995BE, lo = 0x23100809B9C21FA2 }, -- -279
    { hi = 0xB58547448FFFFB2D, lo = 0xABD40A0C2832A78B }, -- -278
    { hi = 0xE2E69915B3FFF9F9, lo = 0x16C90C8F323F516D }, -- -277
    { hi = 0x8DD01FAD907FFC3B, lo = 0xAE3DA7D97F6792E4 }, -- -276
    { hi = 0xB1442798F49FFB4A, lo = 0x99CD11CFDF41779D }, -- -275
    { hi = 0xDD95317F31C7FA1D, lo = 0x40405643D711D584 }, -- -274
    { hi = 0x8A7D3EEF7F1CFC52, lo = 0x482835EA666B2573 }, -- -273
    { hi = 0xAD1C8EAB5EE43B66, lo = 0xDA3243650005EED0 }, -- -272
    { hi = 0xD863B256369D4A40, lo = 0x90BED43E40076A83 }, -- -271
    { hi = 0x873E4F75E2224E68, lo = 0x5A7744A6E804A292 }, -- -270
    { hi = 0xA90DE3535AAAE202, lo = 0x711515D0A205CB37 }, -- -269
    { hi = 0xD3515C2831559A83, lo = 0x0D5A5B44CA873E04 }, -- -268
    { hi = 0x8412D9991ED58091, lo = 0xE858790AFE9486C3 }, -- -267
    { hi = 0xA5178FFF668AE0B6, lo = 0x626E974DBE39A873 }, -- -266
    { hi = 0xCE5D73FF402D98E3, lo = 0xFB0A3D212DC81290 }, -- -265
    { hi = 0x80FA687F881C7F8E, lo = 0x7CE66634BC9D0B9A }, -- -264
    { hi = 0xA139029F6A239F72, lo = 0x1C1FFFC1EBC44E81 }, -- -263
    { hi = 0xC987434744AC874E, lo = 0xA327FFB266B56221 }, -- -262
    { hi = 0xFBE9141915D7A922, lo = 0x4BF1FF9F0062BAA9 }, -- -261
    { hi = 0x9D71AC8FADA6C9B5, lo = 0x6F773FC3603DB4AA }, -- -260
    { hi = 0xC4CE17B399107C22, lo = 0xCB550FB4384D21D4 }, -- -259
    { hi = 0xF6019DA07F549B2B, lo = 0x7E2A53A146606A49 }, -- -258
    { hi = 0x99C102844F94E0FB, lo = 0x2EDA7444CBFC426E }, -- -257
    { hi = 0xC0314325637A1939, lo = 0xFA911155FEFB5309 }, -- -256
    { hi = 0xF03D93EEBC589F88, lo = 0x793555AB7EBA27CB }, -- -255
    { hi = 0x96267C7535B763B5, lo = 0x4BC1558B2F3458DF }, -- -254
    { hi = 0xBBB01B9283253CA2, lo = 0x9EB1AAEDFB016F17 }, -- -253
    { hi = 0xEA9C227723EE8BCB, lo = 0x465E15A979C1CADD }, -- -252
    { hi = 0x92A1958A7675175F, lo = 0x0BFACD89EC191ECA }, -- -251
    { hi = 0xB749FAED14125D36, lo = 0xCEF980EC671F667C }, -- -250
    { hi = 0xE51C79A85916F484, lo = 0x82B7E12780E7401B }, -- -249
    { hi = 0x8F31CC0937AE58D2, lo = 0xD1B2ECB8B0908811 }, -- -248
    { hi = 0xB2FE3F0B8599EF07, lo = 0x861FA7E6DCB4AA16 }, -- -247
    { hi = 0xDFBDCECE67006AC9, lo = 0x67A791E093E1D49B }, -- -246
    { hi = 0x8BD6A141006042BD, lo = 0xE0C8BB2C5C6D24E1 }, -- -245
    { hi = 0xAECC49914078536D, lo = 0x58FAE9F773886E19 }, -- -244
    { hi = 0xDA7F5BF590966848, lo = 0xAF39A475506A899F }, -- -243
    { hi = 0x888F99797A5E012D, lo = 0x6D8406C952429604 }, -- -242
    { hi = 0xAAB37FD7D8F58178, lo = 0xC8E5087BA6D33B84 }, -- -241
    { hi = 0xD5605FCDCF32E1D6, lo = 0xFB1E4A9A90880A65 }, -- -240
    { hi = 0x855C3BE0A17FCD26, lo = 0x5CF2EEA09A550680 }, -- -239
    { hi = 0xA6B34AD8C9DFC06F, lo = 0xF42FAA48C0EA481F }, -- -238
    { hi = 0xD0601D8EFC57B08B, lo = 0xF13B94DAF124DA27 }, -- -237
    { hi = 0x823C12795DB6CE57, lo = 0x76C53D08D6B70859 }, -- -236
    { hi = 0xA2CB1717B52481ED, lo = 0x54768C4B0C64CA6F }, -- -235
    { hi = 0xCB7DDCDDA26DA268, lo = 0xA9942F5DCF7DFD0A }, -- -234
    { hi = 0xFE5D54150B090B02, lo = 0xD3F93B35435D7C4D }, -- -233
    { hi = 0x9EFA548D26E5A6E1, lo = 0xC47BC5014A1A6DB0 }, -- -232
    { hi = 0xC6B8E9B0709F109A, lo = 0x359AB6419CA1091C }, -- -231
    { hi = 0xF867241C8CC6D4C0, lo = 0xC30163D203C94B63 }, -- -230
    { hi = 0x9B407691D7FC44F8, lo = 0x79E0DE63425DCF1E }, -- -229
    { hi = 0xC21094364DFB5636, lo = 0x985915FC12F542E5 }, -- -228
    { hi = 0xF294B943E17A2BC4, lo = 0x3E6F5B7B17B2939E }, -- -227
    { hi = 0x979CF3CA6CEC5B5A, lo = 0xA705992CEECF9C43 }, -- -226
    { hi = 0xBD8430BD08277231, lo = 0x50C6FF782A838354 }, -- -225
    { hi = 0xECE53CEC4A314EBD, lo = 0xA4F8BF5635246429 }, -- -224
    { hi = 0x940F4613AE5ED136, lo = 0x871B7795E136BE9A }, -- -223
    { hi = 0xB913179899F68584, lo = 0x28E2557B59846E40 }, -- -222
    { hi = 0xE757DD7EC07426E5, lo = 0x331AEADA2FE589D0 }, -- -221
    { hi = 0x9096EA6F3848984F, lo = 0x3FF0D2C85DEF7622 }, -- -220
    { hi = 0xB4BCA50B065ABE63, lo = 0x0FED077A756B53AA }, -- -219
    { hi = 0xE1EBCE4DC7F16DFB, lo = 0xD3E8495912C62895 }, -- -218
    { hi = 0x8D3360F09CF6E4BD, lo = 0x64712DD7ABBBD95D }, -- -217
    { hi = 0xB080392CC4349DEC, lo = 0xBD8D794D96AACFB4 }, -- -216
    { hi = 0xDCA04777F541C567, lo = 0xECF0D7A0FC5583A1 }, -- -215
    { hi = 0x89E42CAAF9491B60, lo = 0xF41686C49DB57245 }, -- -214
    { hi = 0xAC5D37D5B79B6239, lo = 0x311C2875C522CED6 }, -- -213
    { hi = 0xD77485CB25823AC7, lo = 0x7D633293366B828C }, -- -212
    { hi = 0x86A8D39EF77164BC, lo = 0xAE5DFF9C02033198 }, -- -211
    { hi = 0xA8530886B54DBDEB, lo = 0xD9F57F830283FDFD }, -- -210
    { hi = 0xD267CAA862A12D66, lo = 0xD072DF63C324FD7C }, -- -209
    { hi = 0x8380DEA93DA4BC60, lo = 0x4247CB9E59F71E6E }, -- -208
    { hi = 0xA46116538D0DEB78, lo = 0x52D9BE85F074E609 }, -- -207
    { hi = 0xCD795BE870516656, lo = 0x67902E276C921F8C }, -- -206
    { hi = 0x806BD9714632DFF6, lo = 0x00BA1CD8A3DB53B7 }, -- -205
    { hi = 0xA086CFCD97BF97F3, lo = 0x80E8A40ECCD228A5 }, -- -204
    { hi = 0xC8A883C0FDAF7DF0, lo = 0x6122CD128006B2CE }, -- -203
    { hi = 0xFAD2A4B13D1B5D6C, lo = 0x796B805720085F82 }, -- -202
    { hi = 0x9CC3A6EEC6311A63, lo = 0xCBE3303674053BB1 }, -- -201
    { hi = 0xC3F490AA77BD60FC, lo = 0xBEDBFC4411068A9D }, -- -200
    { hi = 0xF4F1B4D515ACB93B, lo = 0xEE92FB5515482D45 }, -- -199
    { hi = 0x991711052D8BF3C5, lo = 0x751BDD152D4D1C4B }, -- -198
    { hi = 0xBF5CD54678EEF0B6, lo = 0xD262D45A78A0635E }, -- -197
    { hi = 0xEF340A98172AACE4, lo = 0x86FB897116C87C35 }, -- -196
    { hi = 0x9580869F0E7AAC0E, lo = 0xD45D35E6AE3D4DA1 }, -- -195
    { hi = 0xBAE0A846D2195712, lo = 0x8974836059CCA10A }, -- -194
    { hi = 0xE998D258869FACD7, lo = 0x2BD1A438703FC94C }, -- -193
    { hi = 0x91FF83775423CC06, lo = 0x7B6306A34627DDD0 }, -- -192
    { hi = 0xB67F6455292CBF08, lo = 0x1A3BC84C17B1D543 }, -- -191
    { hi = 0xE41F3D6A7377EECA, lo = 0x20CABA5F1D9E4A94 }, -- -190
    { hi = 0x8E938662882AF53E, lo = 0x547EB47B7282EE9D }, -- -189
    { hi = 0xB23867FB2A35B28D, lo = 0xE99E619A4F23AA44 }, -- -188
    { hi = 0xDEC681F9F4C31F31, lo = 0x6405FA00E2EC94D5 }, -- -187
    { hi = 0x8B3C113C38F9F37E, lo = 0xDE83BC408DD3DD05 }, -- -186
    { hi = 0xAE0B158B4738705E, lo = 0x9624AB50B148D446 }, -- -185
    { hi = 0xD98DDAEE19068C76, lo = 0x3BADD624DD9B0958 }, -- -184
    { hi = 0x87F8A8D4CFA417C9, lo = 0xE54CA5D70A80E5D7 }, -- -183
    { hi = 0xA9F6D30A038D1DBC, lo = 0x5E9FCF4CCD211F4D }, -- -182
    { hi = 0xD47487CC8470652B, lo = 0x7647C32000696720 }, -- -181
    { hi = 0x84C8D4DFD2C63F3B, lo = 0x29ECD9F40041E074 }, -- -180
    { hi = 0xA5FB0A17C777CF09, lo = 0xF468107100525891 }, -- -179
    { hi = 0xCF79CC9DB955C2CC, lo = 0x7182148D4066EEB5 }, -- -178
    { hi = 0x81AC1FE293D599BF, lo = 0xC6F14CD848405531 }, -- -177
    { hi = 0xA21727DB38CB002F, lo = 0xB8ADA00E5A506A7D }, -- -176
    { hi = 0xCA9CF1D206FDC03B, lo = 0xA6D90811F0E4851D }, -- -175
    { hi = 0xFD442E4688BD304A, lo = 0x908F4A166D1DA664 }, -- -174
    { hi = 0x9E4A9CEC15763E2E, lo = 0x9A598E4E043287FF }, -- -173
    { hi = 0xC5DD44271AD3CDBA, lo = 0x40EFF1E1853F29FE }, -- -172
    { hi = 0xF7549530E188C128, lo = 0xD12BEE59E68EF47D }, -- -171
    { hi = 0x9A94DD3E8CF578B9, lo = 0x82BB74F8301958CF }, -- -170
    { hi = 0xC13A148E3032D6E7, lo = 0xE36A52363C1FAF02 }, -- -169
    { hi = 0xF18899B1BC3F8CA1, lo = 0xDC44E6C3CB279AC2 }, -- -168
    { hi = 0x96F5600F15A7B7E5, lo = 0x29AB103A5EF8C0BA }, -- -167
    { hi = 0xBCB2B812DB11A5DE, lo = 0x7415D448F6B6F0E8 }, -- -166
    { hi = 0xEBDF661791D60F56, lo = 0x111B495B3464AD22 }, -- -165
    { hi = 0x936B9FCEBB25C995, lo = 0xCAB10DD900BEEC35 }, -- -164
    { hi = 0xB84687C269EF3BFB, lo = 0x3D5D514F40EEA743 }, -- -163
    { hi = 0xE65829B3046B0AFA, lo = 0x0CB4A5A3112A5113 }, -- -162
    { hi = 0x8FF71A0FE2C2E6DC, lo = 0x47F0E785EABA72AC }, -- -161
    { hi = 0xB3F4E093DB73A093, lo = 0x59ED216765690F57 }, -- -160
    { hi = 0xE0F218B8D25088B8, lo = 0x306869C13EC3532D }, -- -159
    { hi = 0x8C974F7383725573, lo = 0x1E414218C73A13FC }, -- -158
    { hi = 0xAFBD2350644EEACF, lo = 0xE5D1929EF90898FB }, -- -157
    { hi = 0xDBAC6C247D62A583, lo = 0xDF45F746B74ABF3A }, -- -156
    { hi = 0x894BC396CE5DA772, lo = 0x6B8BBA8C328EB784 }, -- -155
    { hi = 0xAB9EB47C81F5114F, lo = 0x066EA92F3F326565 }, -- -154
    { hi = 0xD686619BA27255A2, lo = 0xC80A537B0EFEFEBE }, -- -153
    { hi = 0x8613FD0145877585, lo = 0xBD06742CE95F5F37 }, -- -152
    { hi = 0xA798FC4196E952E7, lo = 0x2C48113823B73705 }, -- -151
    { hi = 0xD17F3B51FCA3A7A0, lo = 0xF75A15862CA504C6 }, -- -150
    { hi = 0x82EF85133DE648C4, lo = 0x9A984D73DBE722FC }, -- -149
    { hi = 0xA3AB66580D5FDAF5, lo = 0xC13E60D0D2E0EBBB }, -- -148
    { hi = 0xCC963FEE10B7D1B3, lo = 0x318DF905079926A9 }, -- -147
    { hi = 0xFFBBCFE994E5C61F, lo = 0xFDF17746497F7053 }, -- -146
    { hi = 0x9FD561F1FD0F9BD3, lo = 0xFEB6EA8BEDEFA634 }, -- -145
    { hi = 0xC7CABA6E7C5382C8, lo = 0xFE64A52EE96B8FC1 }, -- -144
    { hi = 0xF9BD690A1B68637B, lo = 0x3DFDCE7AA3C673B1 }, -- -143
    { hi = 0x9C1661A651213E2D, lo = 0x06BEA10CA65C084F }, -- -142
    { hi = 0xC31BFA0FE5698DB8, lo = 0x486E494FCFF30A63 }, -- -141
    { hi = 0xF3E2F893DEC3F126, lo = 0x5A89DBA3C3EFCCFB }, -- -140
    { hi = 0x986DDB5C6B3A76B7, lo = 0xF89629465A75E01D }, -- -139
    { hi = 0xBE89523386091465, lo = 0xF6BBB397F1135824 }, -- -138
    { hi = 0xEE2BA6C0678B597F, lo = 0x746AA07DED582E2D }, -- -137
    { hi = 0x94DB483840B717EF, lo = 0xA8C2A44EB4571CDD }, -- -136
    { hi = 0xBA121A4650E4DDEB, lo = 0x92F34D62616CE414 }, -- -135
    { hi = 0xE896A0D7E51E1566, lo = 0x77B020BAF9C81D18 }, -- -134
    { hi = 0x915E2486EF32CD60, lo = 0x0ACE1474DC1D122F }, -- -133
    { hi = 0xB5B5ADA8AAFF80B8, lo = 0x0D819992132456BB }, -- -132
    { hi = 0xE3231912D5BF60E6, lo = 0x10E1FFF697ED6C6A }, -- -131
    { hi = 0x8DF5EFABC5979C8F, lo = 0xCA8D3FFA1EF463C2 }, -- -130
    { hi = 0xB1736B96B6FD83B3, lo = 0xBD308FF8A6B17CB3 }, -- -129
    { hi = 0xDDD0467C64BCE4A0, lo = 0xAC7CB3F6D05DDBDF }, -- -128
    { hi = 0x8AA22C0DBEF60EE4, lo = 0x6BCDF07A423AA96C }, -- -127
    { hi = 0xAD4AB7112EB3929D, lo = 0x86C16C98D2C953C7 }, -- -126
    { hi = 0xD89D64D57A607744, lo = 0xE871C7BF077BA8B8 }, -- -125
    { hi = 0x87625F056C7C4A8B, lo = 0x11471CD764AD4973 }, -- -124
    { hi = 0xA93AF6C6C79B5D2D, lo = 0xD598E40D3DD89BD0 }, -- -123
    { hi = 0xD389B47879823479, lo = 0x4AFF1D108D4EC2C4 }, -- -122
    { hi = 0x843610CB4BF160CB, lo = 0xCEDF722A585139BB }, -- -121
    { hi = 0xA54394FE1EEDB8FE, lo = 0xC2974EB4EE658829 }, -- -120
    { hi = 0xCE947A3DA6A9273E, lo = 0x733D226229FEEA33 }, -- -119
    { hi = 0x811CCC668829B887, lo = 0x0806357D5A3F5260 }, -- -118
    { hi = 0xA163FF802A3426A8, lo = 0xCA07C2DCB0CF26F8 }, -- -117
    { hi = 0xC9BCFF6034C13052, lo = 0xFC89B393DD02F0B6 }, -- -116
    { hi = 0xFC2C3F3841F17C67, lo = 0xBBAC2078D443ACE3 }, -- -115
    { hi = 0x9D9BA7832936EDC0, lo = 0xD54B944B84AA4C0E }, -- -114
    { hi = 0xC5029163F384A931, lo = 0x0A9E795E65D4DF12 }, -- -113
    { hi = 0xF64335BCF065D37D, lo = 0x4D4617B5FF4A16D6 }, -- -112
    { hi = 0x99EA0196163FA42E, lo = 0x504BCED1BF8E4E46 }, -- -111
    { hi = 0xC06481FB9BCF8D39, lo = 0xE45EC2862F71E1D7 }, -- -110
    { hi = 0xF07DA27A82C37088, lo = 0x5D767327BB4E5A4D }, -- -109
    { hi = 0x964E858C91BA2655, lo = 0x3A6A07F8D510F870 }, -- -108
    { hi = 0xBBE226EFB628AFEA, lo = 0x890489F70A55368C }, -- -107
    { hi = 0xEADAB0ABA3B2DBE5, lo = 0x2B45AC74CCEA842F }, -- -106
    { hi = 0x92C8AE6B464FC96F, lo = 0x3B0B8BC90012929E }, -- -105
    { hi = 0xB77ADA0617E3BBCB, lo = 0x09CE6EBB40173745 }, -- -104
    { hi = 0xE55990879DDCAABD, lo = 0xCC420A6A101D0516 }, -- -103
    { hi = 0x8F57FA54C2A9EAB6, lo = 0x9FA946824A12232E }, -- -102
    { hi = 0xB32DF8E9F3546564, lo = 0x47939822DC96ABFA }, -- -101
    { hi = 0xDFF9772470297EBD, lo = 0x59787E2B93BC56F8 }, -- -100
    { hi = 0x8BFBEA76C619EF36, lo = 0x57EB4EDB3C55B65B }, --  -99
    { hi = 0xAEFAE51477A06B03, lo = 0xEDE622920B6B23F2 }, --  -98
    { hi = 0xDAB99E59958885C4, lo = 0xE95FAB368E45ECEE }, --  -97
    { hi = 0x88B402F7FD75539B, lo = 0x11DBCB0218EBB415 }, --  -96
    { hi = 0xAAE103B5FCD2A881, lo = 0xD652BDC29F26A11A }, --  -95
    { hi = 0xD59944A37C0752A2, lo = 0x4BE76D3346F04960 }, --  -94
    { hi = 0x857FCAE62D8493A5, lo = 0x6F70A4400C562DDC }, --  -93
    { hi = 0xA6DFBD9FB8E5B88E, lo = 0xCB4CCD500F6BB953 }, --  -92
    { hi = 0xD097AD07A71F26B2, lo = 0x7E2000A41346A7A8 }, --  -91
    { hi = 0x825ECC24C873782F, lo = 0x8ED400668C0C28C9 }, --  -90
    { hi = 0xA2F67F2DFA90563B, lo = 0x728900802F0F32FB }, --  -89
    { hi = 0xCBB41EF979346BCA, lo = 0x4F2B40A03AD2FFBA }, --  -88
    { hi = 0xFEA126B7D78186BC, lo = 0xE2F610C84987BFA9 }, --  -87
    { hi = 0x9F24B832E6B0F436, lo = 0x0DD9CA7D2DF4D7CA }, --  -86
    { hi = 0xC6EDE63FA05D3143, lo = 0x91503D1C79720DBC }, --  -85
    { hi = 0xF8A95FCF88747D94, lo = 0x75A44C6397CE912B }, --  -84
    { hi = 0x9B69DBE1B548CE7C, lo = 0xC986AFBE3EE11ABB }, --  -83
    { hi = 0xC24452DA229B021B, lo = 0xFBE85BADCE996169 }, --  -82
    { hi = 0xF2D56790AB41C2A2, lo = 0xFAE27299423FB9C4 }, --  -81
    { hi = 0x97C560BA6B0919A5, lo = 0xDCCD879FC967D41B }, --  -80
    { hi = 0xBDB6B8E905CB600F, lo = 0x5400E987BBC1C921 }, --  -79
    { hi = 0xED246723473E3813, lo = 0x290123E9AAB23B69 }, --  -78
    { hi = 0x9436C0760C86E30B, lo = 0xF9A0B6720AAF6522 }, --  -77
    { hi = 0xB94470938FA89BCE, lo = 0xF808E40E8D5B3E6A }, --  -76
    { hi = 0xE7958CB87392C2C2, lo = 0xB60B1D1230B20E05 }, --  -75
    { hi = 0x90BD77F3483BB9B9, lo = 0xB1C6F22B5E6F48C3 }, --  -74
    { hi = 0xB4ECD5F01A4AA828, lo = 0x1E38AEB6360B1AF4 }, --  -73
    { hi = 0xE2280B6C20DD5232, lo = 0x25C6DA63C38DE1B1 }, --  -72
    { hi = 0x8D590723948A535F, lo = 0x579C487E5A38AD0F }, --  -71
    { hi = 0xB0AF48EC79ACE837, lo = 0x2D835A9DF0C6D852 }, --  -70
    { hi = 0xDCDB1B2798182244, lo = 0xF8E431456CF88E66 }, --  -69
    { hi = 0x8A08F0F8BF0F156B, lo = 0x1B8E9ECB641B5900 }, --  -68
    { hi = 0xAC8B2D36EED2DAC5, lo = 0xE272467E3D222F40 }, --  -67
    { hi = 0xD7ADF884AA879177, lo = 0x5B0ED81DCC6ABB10 }, --  -66
    { hi = 0x86CCBB52EA94BAEA, lo = 0x98E947129FC2B4EA }, --  -65
    { hi = 0xA87FEA27A539E9A5, lo = 0x3F2398D747B36225 }, --  -64
    { hi = 0xD29FE4B18E88640E, lo = 0x8EEC7F0D19A03AAE }, --  -63
    { hi = 0x83A3EEEEF9153E89, lo = 0x1953CF68300424AD }, --  -62
    { hi = 0xA48CEAAAB75A8E2B, lo = 0x5FA8C3423C052DD8 }, --  -61
    { hi = 0xCDB02555653131B6, lo = 0x3792F412CB06794E }, --  -60
    { hi = 0x808E17555F3EBF11, lo = 0xE2BBD88BBEE40BD1 }, --  -59
    { hi = 0xA0B19D2AB70E6ED6, lo = 0x5B6ACEAEAE9D0EC5 }, --  -58
    { hi = 0xC8DE047564D20A8B, lo = 0xF245825A5A445276 }, --  -57
    { hi = 0xFB158592BE068D2E, lo = 0xEED6E2F0F0D56713 }, --  -56
    { hi = 0x9CED737BB6C4183D, lo = 0x55464DD69685606C }, --  -55
    { hi = 0xC428D05AA4751E4C, lo = 0xAA97E14C3C26B887 }, --  -54
    { hi = 0xF53304714D9265DF, lo = 0xD53DD99F4B3066A9 }, --  -53
    { hi = 0x993FE2C6D07B7FAB, lo = 0xE546A8038EFE402A }, --  -52
    { hi = 0xBF8FDB78849A5F96, lo = 0xDE98520472BDD034 }, --  -51
    { hi = 0xEF73D256A5C0F77C, lo = 0x963E66858F6D4441 }, --  -50
    { hi = 0x95A8637627989AAD, lo = 0xDDE7001379A44AA9 }, --  -49
    { hi = 0xBB127C53B17EC159, lo = 0x5560C018580D5D53 }, --  -48
    { hi = 0xE9D71B689DDE71AF, lo = 0xAAB8F01E6E10B4A7 }, --  -47
    { hi = 0x9226712162AB070D, lo = 0xCAB3961304CA70E9 }, --  -46
    { hi = 0xB6B00D69BB55C8D1, lo = 0x3D607B97C5FD0D23 }, --  -45
    { hi = 0xE45C10C42A2B3B05, lo = 0x8CB89A7DB77C506B }, --  -44
    { hi = 0x8EB98A7A9A5B04E3, lo = 0x77F3608E92ADB243 }, --  -43
    { hi = 0xB267ED1940F1C61C, lo = 0x55F038B237591ED4 }, --  -42
    { hi = 0xDF01E85F912E37A3, lo = 0x6B6C46DEC52F6689 }, --  -41
    { hi = 0x8B61313BBABCE2C6, lo = 0x2323AC4B3B3DA016 }, --  -40
    { hi = 0xAE397D8AA96C1B77, lo = 0xABEC975E0A0D081B }, --  -39
    { hi = 0xD9C7DCED53C72255, lo = 0x96E7BD358C904A22 }, --  -38
    { hi = 0x881CEA14545C7575, lo = 0x7E50D64177DA2E55 }, --  -37
    { hi = 0xAA242499697392D2, lo = 0xDDE50BD1D5D0B9EA }, --  -36
    { hi = 0xD4AD2DBFC3D07787, lo = 0x955E4EC64B44E865 }, --  -35
    { hi = 0x84EC3C97DA624AB4, lo = 0xBD5AF13BEF0B113F }, --  -34
    { hi = 0xA6274BBDD0FADD61, lo = 0xECB1AD8AEACDD58F }, --  -33
    { hi = 0xCFB11EAD453994BA, lo = 0x67DE18EDA5814AF3 }, --  -32
    { hi = 0x81CEB32C4B43FCF4, lo = 0x80EACF948770CED8 }, --  -31
    { hi = 0xA2425FF75E14FC31, lo = 0xA1258379A94D028E }, --  -30
    { hi = 0xCAD2F7F5359A3B3E, lo = 0x096EE45813A04331 }, --  -29
    { hi = 0xFD87B5F28300CA0D, lo = 0x8BCA9D6E188853FD }, --  -28
    { hi = 0x9E74D1B791E07E48, lo = 0x775EA264CF55347E }, --  -27
    { hi = 0xC612062576589DDA, lo = 0x95364AFE032A819E }, --  -26
    { hi = 0xF79687AED3EEC551, lo = 0x3A83DDBD83F52205 }, --  -25
    { hi = 0x9ABE14CD44753B52, lo = 0xC4926A9672793543 }, --  -24
    { hi = 0xC16D9A0095928A27, lo = 0x75B7053C0F178294 }, --  -23
    { hi = 0xF1C90080BAF72CB1, lo = 0x5324C68B12DD6339 }, --  -22
    { hi = 0x971DA05074DA7BEE, lo = 0xD3F6FC16EBCA5E04 }, --  -21
    { hi = 0xBCE5086492111AEA, lo = 0x88F4BB1CA6BCF585 }, --  -20
    { hi = 0xEC1E4A7DB69561A5, lo = 0x2B31E9E3D06C32E6 }, --  -19
    { hi = 0x9392EE8E921D5D07, lo = 0x3AFF322E62439FD0 }, --  -18
    { hi = 0xB877AA3236A4B449, lo = 0x09BEFEB9FAD487C3 }, --  -17
    { hi = 0xE69594BEC44DE15B, lo = 0x4C2EBE687989A9B4 }, --  -16
    { hi = 0x901D7CF73AB0ACD9, lo = 0x0F9D37014BF60A11 }, --  -15
    { hi = 0xB424DC35095CD80F, lo = 0x538484C19EF38C95 }, --  -14
    { hi = 0xE12E13424BB40E13, lo = 0x2865A5F206B06FBA }, --  -13
    { hi = 0x8CBCCC096F5088CB, lo = 0xF93F87B7442E45D4 }, --  -12
    { hi = 0xAFEBFF0BCB24AAFE, lo = 0xF78F69A51539D749 }, --  -11
    { hi = 0xDBE6FECEBDEDD5BE, lo = 0xB573440E5A884D1C }, --  -10
    { hi = 0x89705F4136B4A597, lo = 0x31680A88F8953031 }, --   -9
    { hi = 0xABCC77118461CEFC, lo = 0xFDC20D2B36BA7C3E }, --   -8
    { hi = 0xD6BF94D5E57A42BC, lo = 0x3D32907604691B4D }, --   -7
    { hi = 0x8637BD05AF6C69B5, lo = 0xA63F9A49C2C1B110 }, --   -6
    { hi = 0xA7C5AC471B478423, lo = 0x0FCF80DC33721D54 }, --   -5
    { hi = 0xD1B71758E219652B, lo = 0xD3C36113404EA4A9 }, --   -4
    { hi = 0x83126E978D4FDF3B, lo = 0x645A1CAC083126EA }, --   -3
    { hi = 0xA3D70A3D70A3D70A, lo = 0x3D70A3D70A3D70A4 }, --   -2
    { hi = 0xCCCCCCCCCCCCCCCC, lo = 0xCCCCCCCCCCCCCCCD }, --   -1
    { hi = 0x8000000000000000, lo = 0x0000000000000000 }, --    0
    { hi = 0xA000000000000000, lo = 0x0000000000000000 }, --    1
    { hi = 0xC800000000000000, lo = 0x0000000000000000 }, --    2
    { hi = 0xFA00000000000000, lo = 0x0000000000000000 }, --    3
    { hi = 0x9C40000000000000, lo = 0x0000000000000000 }, --    4
    { hi = 0xC350000000000000, lo = 0x0000000000000000 }, --    5
    { hi = 0xF424000000000000, lo = 0x0000000000000000 }, --    6
    { hi = 0x9896800000000000, lo = 0x0000000000000000 }, --    7
    { hi = 0xBEBC200000000000, lo = 0x0000000000000000 }, --    8
    { hi = 0xEE6B280000000000, lo = 0x0000000000000000 }, --    9
    { hi = 0x9502F90000000000, lo = 0x0000000000000000 }, --   10
    { hi = 0xBA43B74000000000, lo = 0x0000000000000000 }, --   11
    { hi = 0xE8D4A51000000000, lo = 0x0000000000000000 }, --   12
    { hi = 0x9184E72A00000000, lo = 0x0000000000000000 }, --   13
    { hi = 0xB5E620F480000000, lo = 0x0000000000000000 }, --   14
    { hi = 0xE35FA931A0000000, lo = 0x0000000000000000 }, --   15
    { hi = 0x8E1BC9BF04000000, lo = 0x0000000000000000 }, --   16
    { hi = 0xB1A2BC2EC5000000, lo = 0x0000000000000000 }, --   17
    { hi = 0xDE0B6B3A76400000, lo = 0x0000000000000000 }, --   18
    { hi = 0x8AC7230489E80000, lo = 0x0000000000000000 }, --   19
    { hi = 0xAD78EBC5AC620000, lo = 0x0000000000000000 }, --   20
    { hi = 0xD8D726B7177A8000, lo = 0x0000000000000000 }, --   21
    { hi = 0x878678326EAC9000, lo = 0x0000000000000000 }, --   22
    { hi = 0xA968163F0A57B400, lo = 0x0000000000000000 }, --   23
    { hi = 0xD3C21BCECCEDA100, lo = 0x0000000000000000 }, --   24
    { hi = 0x84595161401484A0, lo = 0x0000000000000000 }, --   25
    { hi = 0xA56FA5B99019A5C8, lo = 0x0000000000000000 }, --   26
    { hi = 0xCECB8F27F4200F3A, lo = 0x0000000000000000 }, --   27
    { hi = 0x813F3978F8940984, lo = 0x4000000000000000 }, --   28
    { hi = 0xA18F07D736B90BE5, lo = 0x5000000000000000 }, --   29
    { hi = 0xC9F2C9CD04674EDE, lo = 0xA400000000000000 }, --   30
    { hi = 0xFC6F7C4045812296, lo = 0x4D00000000000000 }, --   31
    { hi = 0x9DC5ADA82B70B59D, lo = 0xF020000000000000 }, --   32
    { hi = 0xC5371912364CE305, lo = 0x6C28000000000000 }, --   33
    { hi = 0xF684DF56C3E01BC6, lo = 0xC732000000000000 }, --   34
    { hi = 0x9A130B963A6C115C, lo = 0x3C7F400000000000 }, --   35
    { hi = 0xC097CE7BC90715B3, lo = 0x4B9F100000000000 }, --   36
    { hi = 0xF0BDC21ABB48DB20, lo = 0x1E86D40000000000 }, --   37
    { hi = 0x96769950B50D88F4, lo = 0x1314448000000000 }, --   38
    { hi = 0xBC143FA4E250EB31, lo = 0x17D955A000000000 }, --   39
    { hi = 0xEB194F8E1AE525FD, lo = 0x5DCFAB0800000000 }, --   40
    { hi = 0x92EFD1B8D0CF37BE, lo = 0x5AA1CAE500000000 }, --   41
    { hi = 0xB7ABC627050305AD, lo = 0xF14A3D9E40000000 }, --   42
    { hi = 0xE596B7B0C643C719, lo = 0x6D9CCD05D0000000 }, --   43
    { hi = 0x8F7E32CE7BEA5C6F, lo = 0xE4820023A2000000 }, --   44
    { hi = 0xB35DBF821AE4F38B, lo = 0xDDA2802C8A800000 }, --   45
    { hi = 0xE0352F62A19E306E, lo = 0xD50B2037AD200000 }, --   46
    { hi = 0x8C213D9DA502DE45, lo = 0x4526F422CC340000 }, --   47
    { hi = 0xAF298D050E4395D6, lo = 0x9670B12B7F410000 }, --   48
    { hi = 0xDAF3F04651D47B4C, lo = 0x3C0CDD765F114000 }, --   49
    { hi = 0x88D8762BF324CD0F, lo = 0xA5880A69FB6AC800 }, --   50
    { hi = 0xAB0E93B6EFEE0053, lo = 0x8EEA0D047A457A00 }, --   51
    { hi = 0xD5D238A4ABE98068, lo = 0x72A4904598D6D880 }, --   52
    { hi = 0x85A36366EB71F041, lo = 0x47A6DA2B7F864750 }, --   53
    { hi = 0xA70C3C40A64E6C51, lo = 0x999090B65F67D924 }, --   54
    { hi = 0xD0CF4B50CFE20765, lo = 0xFFF4B4E3F741CF6D }, --   55
    { hi = 0x82818F1281ED449F, lo = 0xBFF8F10E7A8921A5 }, --   56
    { hi = 0xA321F2D7226895C7, lo = 0xAFF72D52192B6A0E }, --   57
    { hi = 0xCBEA6F8CEB02BB39, lo = 0x9BF4F8A69F764491 }, --   58
    { hi = 0xFEE50B7025C36A08, lo = 0x02F236D04753D5B5 }, --   59
    { hi = 0x9F4F2726179A2245, lo = 0x01D762422C946591 }, --   60
    { hi = 0xC722F0EF9D80AAD6, lo = 0x424D3AD2B7B97EF6 }, --   61
    { hi = 0xF8EBAD2B84E0D58B, lo = 0xD2E0898765A7DEB3 }, --   62
    { hi = 0x9B934C3B330C8577, lo = 0x63CC55F49F88EB30 }, --   63
    { hi = 0xC2781F49FFCFA6D5, lo = 0x3CBF6B71C76B25FC }, --   64
    { hi = 0xF316271C7FC3908A, lo = 0x8BEF464E3945EF7B }, --   65
    { hi = 0x97EDD871CFDA3A56, lo = 0x97758BF0E3CBB5AD }, --   66
    { hi = 0xBDE94E8E43D0C8EC, lo = 0x3D52EEED1CBEA318 }, --   67
    { hi = 0xED63A231D4C4FB27, lo = 0x4CA7AAA863EE4BDE }, --   68
    { hi = 0x945E455F24FB1CF8, lo = 0x8FE8CAA93E74EF6B }, --   69
    { hi = 0xB975D6B6EE39E436, lo = 0xB3E2FD538E122B45 }, --   70
    { hi = 0xE7D34C64A9C85D44, lo = 0x60DBBCA87196B617 }, --   71
    { hi = 0x90E40FBEEA1D3A4A, lo = 0xBC8955E946FE31CE }, --   72
    { hi = 0xB51D13AEA4A488DD, lo = 0x6BABAB6398BDBE42 }, --   73
    { hi = 0xE264589A4DCDAB14, lo = 0xC696963C7EED2DD2 }, --   74
    { hi = 0x8D7EB76070A08AEC, lo = 0xFC1E1DE5CF543CA3 }, --   75
    { hi = 0xB0DE65388CC8ADA8, lo = 0x3B25A55F43294BCC }, --   76
    { hi = 0xDD15FE86AFFAD912, lo = 0x49EF0EB713F39EBF }, --   77
    { hi = 0x8A2DBF142DFCC7AB, lo = 0x6E3569326C784338 }, --   78
    { hi = 0xACB92ED9397BF996, lo = 0x49C2C37F07965405 }, --   79
    { hi = 0xD7E77A8F87DAF7FB, lo = 0xDC33745EC97BE907 }, --   80
    { hi = 0x86F0AC99B4E8DAFD, lo = 0x69A028BB3DED71A4 }, --   81
    { hi = 0xA8ACD7C0222311BC, lo = 0xC40832EA0D68CE0D }, --   82
    { hi = 0xD2D80DB02AABD62B, lo = 0xF50A3FA490C30191 }, --   83
    { hi = 0x83C7088E1AAB65DB, lo = 0x792667C6DA79E0FB }, --   84
    { hi = 0xA4B8CAB1A1563F52, lo = 0x577001B891185939 }, --   85
    { hi = 0xCDE6FD5E09ABCF26, lo = 0xED4C0226B55E6F87 }, --   86
    { hi = 0x80B05E5AC60B6178, lo = 0x544F8158315B05B5 }, --   87
    { hi = 0xA0DC75F1778E39D6, lo = 0x696361AE3DB1C722 }, --   88
    { hi = 0xC913936DD571C84C, lo = 0x03BC3A19CD1E38EA }, --   89
    { hi = 0xFB5878494ACE3A5F, lo = 0x04AB48A04065C724 }, --   90
    { hi = 0x9D174B2DCEC0E47B, lo = 0x62EB0D64283F9C77 }, --   91
    { hi = 0xC45D1DF942711D9A, lo = 0x3BA5D0BD324F8395 }, --   92
    { hi = 0xF5746577930D6500, lo = 0xCA8F44EC7EE3647A }, --   93
    { hi = 0x9968BF6ABBE85F20, lo = 0x7E998B13CF4E1ECC }, --   94
    { hi = 0xBFC2EF456AE276E8, lo = 0x9E3FEDD8C321A67F }, --   95
    { hi = 0xEFB3AB16C59B14A2, lo = 0xC5CFE94EF3EA101F }, --   96
    { hi = 0x95D04AEE3B80ECE5, lo = 0xBBA1F1D158724A13 }, --   97
    { hi = 0xBB445DA9CA61281F, lo = 0x2A8A6E45AE8EDC98 }, --   98
    { hi = 0xEA1575143CF97226, lo = 0xF52D09D71A3293BE }, --   99
    { hi = 0x924D692CA61BE758, lo = 0x593C2626705F9C57 }, --  100
    { hi = 0xB6E0C377CFA2E12E, lo = 0x6F8B2FB00C77836D }, --  101
    { hi = 0xE498F455C38B997A, lo = 0x0B6DFB9C0F956448 }, --  102
    { hi = 0x8EDF98B59A373FEC, lo = 0x4724BD4189BD5EAD }, --  103
    { hi = 0xB2977EE300C50FE7, lo = 0x58EDEC91EC2CB658 }, --  104
    { hi = 0xDF3D5E9BC0F653E1, lo = 0x2F2967B66737E3EE }, --  105
    { hi = 0x8B865B215899F46C, lo = 0xBD79E0D20082EE75 }, --  106
    { hi = 0xAE67F1E9AEC07187, lo = 0xECD8590680A3AA12 }, --  107
    { hi = 0xDA01EE641A708DE9, lo = 0xE80E6F4820CC9496 }, --  108
    { hi = 0x884134FE908658B2, lo = 0x3109058D147FDCDE }, --  109
    { hi = 0xAA51823E34A7EEDE, lo = 0xBD4B46F0599FD416 }, --  110
    { hi = 0xD4E5E2CDC1D1EA96, lo = 0x6C9E18AC7007C91B }, --  111
    { hi = 0x850FADC09923329E, lo = 0x03E2CF6BC604DDB1 }, --  112
    { hi = 0xA6539930BF6BFF45, lo = 0x84DB8346B786151D }, --  113
    { hi = 0xCFE87F7CEF46FF16, lo = 0xE612641865679A64 }, --  114
    { hi = 0x81F14FAE158C5F6E, lo = 0x4FCB7E8F3F60C07F }, --  115
    { hi = 0xA26DA3999AEF7749, lo = 0xE3BE5E330F38F09E }, --  116
    { hi = 0xCB090C8001AB551C, lo = 0x5CADF5BFD3072CC6 }, --  117
    { hi = 0xFDCB4FA002162A63, lo = 0x73D9732FC7C8F7F7 }, --  118
    { hi = 0x9E9F11C4014DDA7E, lo = 0x2867E7FDDCDD9AFB }, --  119
    { hi = 0xC646D63501A1511D, lo = 0xB281E1FD541501B9 }, --  120
    { hi = 0xF7D88BC24209A565, lo = 0x1F225A7CA91A4227 }, --  121
    { hi = 0x9AE757596946075F, lo = 0x3375788DE9B06959 }, --  122
    { hi = 0xC1A12D2FC3978937, lo = 0x0052D6B1641C83AF }, --  123
    { hi = 0xF209787BB47D6B84, lo = 0xC0678C5DBD23A49B }, --  124
    { hi = 0x9745EB4D50CE6332, lo = 0xF840B7BA963646E1 }, --  125
    { hi = 0xBD176620A501FBFF, lo = 0xB650E5A93BC3D899 }, --  126
    { hi = 0xEC5D3FA8CE427AFF, lo = 0xA3E51F138AB4CEBF }, --  127
    { hi = 0x93BA47C980E98CDF, lo = 0xC66F336C36B10138 }, --  128
    { hi = 0xB8A8D9BBE123F017, lo = 0xB80B0047445D4185 }, --  129
    { hi = 0xE6D3102AD96CEC1D, lo = 0xA60DC059157491E6 }, --  130
    { hi = 0x9043EA1AC7E41392, lo = 0x87C89837AD68DB30 }, --  131
    { hi = 0xB454E4A179DD1877, lo = 0x29BABE4598C311FC }, --  132
    { hi = 0xE16A1DC9D8545E94, lo = 0xF4296DD6FEF3D67B }, --  133
    { hi = 0x8CE2529E2734BB1D, lo = 0x1899E4A65F58660D }, --  134
    { hi = 0xB01AE745B101E9E4, lo = 0x5EC05DCFF72E7F90 }, --  135
    { hi = 0xDC21A1171D42645D, lo = 0x76707543F4FA1F74 }, --  136
    { hi = 0x899504AE72497EBA, lo = 0x6A06494A791C53A9 }, --  137
    { hi = 0xABFA45DA0EDBDE69, lo = 0x0487DB9D17636893 }, --  138
    { hi = 0xD6F8D7509292D603, lo = 0x45A9D2845D3C42B7 }, --  139
    { hi = 0x865B86925B9BC5C2, lo = 0x0B8A2392BA45A9B3 }, --  140
    { hi = 0xA7F26836F282B732, lo = 0x8E6CAC7768D7141F }, --  141
    { hi = 0xD1EF0244AF2364FF, lo = 0x3207D795430CD927 }, --  142
    { hi = 0x8335616AED761F1F, lo = 0x7F44E6BD49E807B9 }, --  143
    { hi = 0xA402B9C5A8D3A6E7, lo = 0x5F16206C9C6209A7 }, --  144
    { hi = 0xCD036837130890A1, lo = 0x36DBA887C37A8C10 }, --  145
    { hi = 0x802221226BE55A64, lo = 0xC2494954DA2C978A }, --  146
    { hi = 0xA02AA96B06DEB0FD, lo = 0xF2DB9BAA10B7BD6D }, --  147
    { hi = 0xC83553C5C8965D3D, lo = 0x6F92829494E5ACC8 }, --  148
    { hi = 0xFA42A8B73ABBF48C, lo = 0xCB772339BA1F17FA }, --  149
    { hi = 0x9C69A97284B578D7, lo = 0xFF2A760414536EFC }, --  150
    { hi = 0xC38413CF25E2D70D, lo = 0xFEF5138519684ABB }, --  151
    { hi = 0xF46518C2EF5B8CD1, lo = 0x7EB258665FC25D6A }, --  152
    { hi = 0x98BF2F79D5993802, lo = 0xEF2F773FFBD97A62 }, --  153
    { hi = 0xBEEEFB584AFF8603, lo = 0xAAFB550FFACFD8FB }, --  154
    { hi = 0xEEAABA2E5DBF6784, lo = 0x95BA2A53F983CF39 }, --  155
    { hi = 0x952AB45CFA97A0B2, lo = 0xDD945A747BF26184 }, --  156
    { hi = 0xBA756174393D88DF, lo = 0x94F971119AEEF9E5 }, --  157
    { hi = 0xE912B9D1478CEB17, lo = 0x7A37CD5601AAB85E }, --  158
    { hi = 0x91ABB422CCB812EE, lo = 0xAC62E055C10AB33B }, --  159
    { hi = 0xB616A12B7FE617AA, lo = 0x577B986B314D600A }, --  160
    { hi = 0xE39C49765FDF9D94, lo = 0xED5A7E85FDA0B80C }, --  161
    { hi = 0x8E41ADE9FBEBC27D, lo = 0x14588F13BE847308 }, --  162
    { hi = 0xB1D219647AE6B31C, lo = 0x596EB2D8AE258FC9 }, --  163
    { hi = 0xDE469FBD99A05FE3, lo = 0x6FCA5F8ED9AEF3BC }, --  164
    { hi = 0x8AEC23D680043BEE, lo = 0x25DE7BB9480D5855 }, --  165
    { hi = 0xADA72CCC20054AE9, lo = 0xAF561AA79A10AE6B }, --  166
    { hi = 0xD910F7FF28069DA4, lo = 0x1B2BA1518094DA05 }, --  167
    { hi = 0x87AA9AFF79042286, lo = 0x90FB44D2F05D0843 }, --  168
    { hi = 0xA99541BF57452B28, lo = 0x353A1607AC744A54 }, --  169
    { hi = 0xD3FA922F2D1675F2, lo = 0x42889B8997915CE9 }, --  170
    { hi = 0x847C9B5D7C2E09B7, lo = 0x69956135FEBADA12 }, --  171
    { hi = 0xA59BC234DB398C25, lo = 0x43FAB9837E699096 }, --  172
    { hi = 0xCF02B2C21207EF2E, lo = 0x94F967E45E03F4BC }, --  173
    { hi = 0x8161AFB94B44F57D, lo = 0x1D1BE0EEBAC278F6 }, --  174
    { hi = 0xA1BA1BA79E1632DC, lo = 0x6462D92A69731733 }, --  175
    { hi = 0xCA28A291859BBF93, lo = 0x7D7B8F7503CFDCFF }, --  176
    { hi = 0xFCB2CB35E702AF78, lo = 0x5CDA735244C3D43F }, --  177
    { hi = 0x9DEFBF01B061ADAB, lo = 0x3A0888136AFA64A8 }, --  178
    { hi = 0xC56BAEC21C7A1916, lo = 0x088AAA1845B8FDD1 }, --  179
    { hi = 0xF6C69A72A3989F5B, lo = 0x8AAD549E57273D46 }, --  180
    { hi = 0x9A3C2087A63F6399, lo = 0x36AC54E2F678864C }, --  181
    { hi = 0xC0CB28A98FCF3C7F, lo = 0x84576A1BB416A7DE }, --  182
    { hi = 0xF0FDF2D3F3C30B9F, lo = 0x656D44A2A11C51D6 }, --  183
    { hi = 0x969EB7C47859E743, lo = 0x9F644AE5A4B1B326 }, --  184
    { hi = 0xBC4665B596706114, lo = 0x873D5D9F0DDE1FEF }, --  185
    { hi = 0xEB57FF22FC0C7959, lo = 0xA90CB506D155A7EB }, --  186
    { hi = 0x9316FF75DD87CBD8, lo = 0x09A7F12442D588F3 }, --  187
    { hi = 0xB7DCBF5354E9BECE, lo = 0x0C11ED6D538AEB30 }, --  188
    { hi = 0xE5D3EF282A242E81, lo = 0x8F1668C8A86DA5FB }, --  189
    { hi = 0x8FA475791A569D10, lo = 0xF96E017D694487BD }, --  190
    { hi = 0xB38D92D760EC4455, lo = 0x37C981DCC395A9AD }, --  191
    { hi = 0xE070F78D3927556A, lo = 0x85BBE253F47B1418 }, --  192
    { hi = 0x8C469AB843B89562, lo = 0x93956D7478CCEC8F }, --  193
    { hi = 0xAF58416654A6BABB, lo = 0x387AC8D1970027B3 }, --  194
    { hi = 0xDB2E51BFE9D0696A, lo = 0x06997B05FCC0319F }, --  195
    { hi = 0x88FCF317F22241E2, lo = 0x441FECE3BDF81F04 }, --  196
    { hi = 0xAB3C2FDDEEAAD25A, lo = 0xD527E81CAD7626C4 }, --  197
    { hi = 0xD60B3BD56A5586F1, lo = 0x8A71E223D8D3B075 }, --  198
    { hi = 0x85C7056562757456, lo = 0xF6872D5667844E4A }, --  199
    { hi = 0xA738C6BEBB12D16C, lo = 0xB428F8AC016561DC }, --  200
    { hi = 0xD106F86E69D785C7, lo = 0xE13336D701BEBA53 }, --  201
    { hi = 0x82A45B450226B39C, lo = 0xECC0024661173474 }, --  202
    { hi = 0xA34D721642B06084, lo = 0x27F002D7F95D0191 }, --  203
    { hi = 0xCC20CE9BD35C78A5, lo = 0x31EC038DF7B441F5 }, --  204
    { hi = 0xFF290242C83396CE, lo = 0x7E67047175A15272 }, --  205
    { hi = 0x9F79A169BD203E41, lo = 0x0F0062C6E984D387 }, --  206
    { hi = 0xC75809C42C684DD1, lo = 0x52C07B78A3E60869 }, --  207
    { hi = 0xF92E0C3537826145, lo = 0xA7709A56CCDF8A83 }, --  208
    { hi = 0x9BBCC7A142B17CCB, lo = 0x88A66076400BB692 }, --  209
    { hi = 0xC2ABF989935DDBFE, lo = 0x6ACFF893D00EA436 }, --  210
    { hi = 0xF356F7EBF83552FE, lo = 0x0583F6B8C4124D44 }, --  211
    { hi = 0x98165AF37B2153DE, lo = 0xC3727A337A8B704B }, --  212
    { hi = 0xBE1BF1B059E9A8D6, lo = 0x744F18C0592E4C5D }, --  213
    { hi = 0xEDA2EE1C7064130C, lo = 0x1162DEF06F79DF74 }, --  214
    { hi = 0x9485D4D1C63E8BE7, lo = 0x8ADDCB5645AC2BA9 }, --  215
    { hi = 0xB9A74A0637CE2EE1, lo = 0x6D953E2BD7173693 }, --  216
    { hi = 0xE8111C87C5C1BA99, lo = 0xC8FA8DB6CCDD0438 }, --  217
    { hi = 0x910AB1D4DB9914A0, lo = 0x1D9C9892400A22A3 }, --  218
    { hi = 0xB54D5E4A127F59C8, lo = 0x2503BEB6D00CAB4C }, --  219
    { hi = 0xE2A0B5DC971F303A, lo = 0x2E44AE64840FD61E }, --  220
    { hi = 0x8DA471A9DE737E24, lo = 0x5CEAECFED289E5D3 }, --  221
    { hi = 0xB10D8E1456105DAD, lo = 0x7425A83E872C5F48 }, --  222
    { hi = 0xDD50F1996B947518, lo = 0xD12F124E28F7771A }, --  223
    { hi = 0x8A5296FFE33CC92F, lo = 0x82BD6B70D99AAA70 }, --  224
    { hi = 0xACE73CBFDC0BFB7B, lo = 0x636CC64D1001550C }, --  225
    { hi = 0xD8210BEFD30EFA5A, lo = 0x3C47F7E05401AA4F }, --  226
    { hi = 0x8714A775E3E95C78, lo = 0x65ACFAEC34810A72 }, --  227
    { hi = 0xA8D9D1535CE3B396, lo = 0x7F1839A741A14D0E }, --  228
    { hi = 0xD31045A8341CA07C, lo = 0x1EDE48111209A051 }, --  229
    { hi = 0x83EA2B892091E44D, lo = 0x934AED0AAB460433 }, --  230
    { hi = 0xA4E4B66B68B65D60, lo = 0xF81DA84D56178540 }, --  231
    { hi = 0xCE1DE40642E3F4B9, lo = 0x36251260AB9D668F }, --  232
    { hi = 0x80D2AE83E9CE78F3, lo = 0xC1D72B7C6B42601A }, --  233
    { hi = 0xA1075A24E4421730, lo = 0xB24CF65B8612F820 }, --  234
    { hi = 0xC94930AE1D529CFC, lo = 0xDEE033F26797B628 }, --  235
    { hi = 0xFB9B7CD9A4A7443C, lo = 0x169840EF017DA3B2 }, --  236
    { hi = 0x9D412E0806E88AA5, lo = 0x8E1F289560EE864F }, --  237
    { hi = 0xC491798A08A2AD4E, lo = 0xF1A6F2BAB92A27E3 }, --  238
    { hi = 0xF5B5D7EC8ACB58A2, lo = 0xAE10AF696774B1DC }, --  239
    { hi = 0x9991A6F3D6BF1765, lo = 0xACCA6DA1E0A8EF2A }, --  240
    { hi = 0xBFF610B0CC6EDD3F, lo = 0x17FD090A58D32AF4 }, --  241
    { hi = 0xEFF394DCFF8A948E, lo = 0xDDFC4B4CEF07F5B1 }, --  242
    { hi = 0x95F83D0A1FB69CD9, lo = 0x4ABDAF101564F98F }, --  243
    { hi = 0xBB764C4CA7A4440F, lo = 0x9D6D1AD41ABE37F2 }, --  244
    { hi = 0xEA53DF5FD18D5513, lo = 0x84C86189216DC5EE }, --  245
    { hi = 0x92746B9BE2F8552C, lo = 0x32FD3CF5B4E49BB5 }, --  246
    { hi = 0xB7118682DBB66A77, lo = 0x3FBC8C33221DC2A2 }, --  247
    { hi = 0xE4D5E82392A40515, lo = 0x0FABAF3FEAA5334B }, --  248
    { hi = 0x8F05B1163BA6832D, lo = 0x29CB4D87F2A7400F }, --  249
    { hi = 0xB2C71D5BCA9023F8, lo = 0x743E20E9EF511013 }, --  250
    { hi = 0xDF78E4B2BD342CF6, lo = 0x914DA9246B255417 }, --  251
    { hi = 0x8BAB8EEFB6409C1A, lo = 0x1AD089B6C2F7548F }, --  252
    { hi = 0xAE9672ABA3D0C320, lo = 0xA184AC2473B529B2 }, --  253
    { hi = 0xDA3C0F568CC4F3E8, lo = 0xC9E5D72D90A2741F }, --  254
    { hi = 0x8865899617FB1871, lo = 0x7E2FA67C7A658893 }, --  255
    { hi = 0xAA7EEBFB9DF9DE8D, lo = 0xDDBB901B98FEEAB8 }, --  256
    { hi = 0xD51EA6FA85785631, lo = 0x552A74227F3EA566 }, --  257
    { hi = 0x8533285C936B35DE, lo = 0xD53A88958F872760 }, --  258
    { hi = 0xA67FF273B8460356, lo = 0x8A892ABAF368F138 }, --  259
    { hi = 0xD01FEF10A657842C, lo = 0x2D2B7569B0432D86 }, --  260
    { hi = 0x8213F56A67F6B29B, lo = 0x9C3B29620E29FC74 }, --  261
    { hi = 0xA298F2C501F45F42, lo = 0x8349F3BA91B47B90 }, --  262
    { hi = 0xCB3F2F7642717713, lo = 0x241C70A936219A74 }, --  263
    { hi = 0xFE0EFB53D30DD4D7, lo = 0xED238CD383AA0111 }, --  264
    { hi = 0x9EC95D1463E8A506, lo = 0xF4363804324A40AB }, --  265
    { hi = 0xC67BB4597CE2CE48, lo = 0xB143C6053EDCD0D6 }, --  266
    { hi = 0xF81AA16FDC1B81DA, lo = 0xDD94B7868E94050B }, --  267
    { hi = 0x9B10A4E5E9913128, lo = 0xCA7CF2B4191C8327 }, --  268
    { hi = 0xC1D4CE1F63F57D72, lo = 0xFD1C2F611F63A3F1 }, --  269
    { hi = 0xF24A01A73CF2DCCF, lo = 0xBC633B39673C8CED }, --  270
    { hi = 0x976E41088617CA01, lo = 0xD5BE0503E085D814 }, --  271
    { hi = 0xBD49D14AA79DBC82, lo = 0x4B2D8644D8A74E19 }, --  272
    { hi = 0xEC9C459D51852BA2, lo = 0xDDF8E7D60ED1219F }, --  273
    { hi = 0x93E1AB8252F33B45, lo = 0xCABB90E5C942B504 }, --  274
    { hi = 0xB8DA1662E7B00A17, lo = 0x3D6A751F3B936244 }, --  275
    { hi = 0xE7109BFBA19C0C9D, lo = 0x0CC512670A783AD5 }, --  276
    { hi = 0x906A617D450187E2, lo = 0x27FB2B80668B24C6 }, --  277
    { hi = 0xB484F9DC9641E9DA, lo = 0xB1F9F660802DEDF7 }, --  278
    { hi = 0xE1A63853BBD26451, lo = 0x5E7873F8A0396974 }, --  279
    { hi = 0x8D07E33455637EB2, lo = 0xDB0B487B6423E1E9 }, --  280
    { hi = 0xB049DC016ABC5E5F, lo = 0x91CE1A9A3D2CDA63 }, --  281
    { hi = 0xDC5C5301C56B75F7, lo = 0x7641A140CC7810FC }, --  282
    { hi = 0x89B9B3E11B6329BA, lo = 0xA9E904C87FCB0A9E }, --  283
    { hi = 0xAC2820D9623BF429, lo = 0x546345FA9FBDCD45 }, --  284
    { hi = 0xD732290FBACAF133, lo = 0xA97C177947AD4096 }, --  285
    { hi = 0x867F59A9D4BED6C0, lo = 0x49ED8EABCCCC485E }, --  286
    { hi = 0xA81F301449EE8C70, lo = 0x5C68F256BFFF5A75 }, --  287
    { hi = 0xD226FC195C6A2F8C, lo = 0x73832EEC6FFF3112 }, --  288
    { hi = 0x83585D8FD9C25DB7, lo = 0xC831FD53C5FF7EAC }, --  289
    { hi = 0xA42E74F3D032F525, lo = 0xBA3E7CA8B77F5E56 }, --  290
    { hi = 0xCD3A1230C43FB26F, lo = 0x28CE1BD2E55F35EC }, --  291
    { hi = 0x80444B5E7AA7CF85, lo = 0x7980D163CF5B81B4 }, --  292
    { hi = 0xA0555E361951C366, lo = 0xD7E105BCC3326220 }, --  293
    { hi = 0xC86AB5C39FA63440, lo = 0x8DD9472BF3FEFAA8 }, --  294
    { hi = 0xFA856334878FC150, lo = 0xB14F98F6F0FEB952 }, --  295
    { hi = 0x9C935E00D4B9D8D2, lo = 0x6ED1BF9A569F33D4 }, --  296
    { hi = 0xC3B8358109E84F07, lo = 0x0A862F80EC4700C9 }, --  297
    { hi = 0xF4A642E14C6262C8, lo = 0xCD27BB612758C0FB }, --  298
    { hi = 0x98E7E9CCCFBD7DBD, lo = 0x8038D51CB897789D }, --  299
    { hi = 0xBF21E44003ACDD2C, lo = 0xE0470A63E6BD56C4 }, --  300
    { hi = 0xEEEA5D5004981478, lo = 0x1858CCFCE06CAC75 }, --  301
    { hi = 0x95527A5202DF0CCB, lo = 0x0F37801E0C43EBC9 }, --  302
    { hi = 0xBAA718E68396CFFD, lo = 0xD30560258F54E6BB }, --  303
    { hi = 0xE950DF20247C83FD, lo = 0x47C6B82EF32A206A }, --  304
    { hi = 0x91D28B7416CDD27E, lo = 0x4CDC331D57FA5442 }, --  305
    { hi = 0xB6472E511C81471D, lo = 0xE0133FE4ADF8E953 }, --  306
    { hi = 0xE3D8F9E563A198E5, lo = 0x58180FDDD97723A7 }, --  307
    { hi = 0x8E679C2F5E44FF8F, lo = 0x570F09EAA7EA7649 }, --  308
    { hi = 0xB201833B35D63F73, lo = 0x2CD2CC6551E513DB }, --  309
    { hi = 0xDE81E40A034BCF4F, lo = 0xF8077F7EA65E58D2 }, --  310
    { hi = 0x8B112E86420F6191, lo = 0xFB04AFAF27FAF783 }, --  311
    { hi = 0xADD57A27D29339F6, lo = 0x79C5DB9AF1F9B564 }, --  312
    { hi = 0xD94AD8B1C7380874, lo = 0x18375281AE7822BD }, --  313
    { hi = 0x87CEC76F1C830548, lo = 0x8F2293910D0B15B6 }, --  314
    { hi = 0xA9C2794AE3A3C69A, lo = 0xB2EB3875504DDB23 }, --  315
    { hi = 0xD433179D9C8CB841, lo = 0x5FA60692A46151EC }, --  316
    { hi = 0x849FEEC281D7F328, lo = 0xDBC7C41BA6BCD334 }, --  317
    { hi = 0xA5C7EA73224DEFF3, lo = 0x12B9B522906C0801 }, --  318
    { hi = 0xCF39E50FEAE16BEF, lo = 0xD768226B34870A01 }, --  319
    { hi = 0x81842F29F2CCE375, lo = 0xE6A1158300D46641 }, --  320
    { hi = 0xA1E53AF46F801C53, lo = 0x60495AE3C1097FD1 }, --  321
    { hi = 0xCA5E89B18B602368, lo = 0x385BB19CB14BDFC5 }, --  322
    { hi = 0xFCF62C1DEE382C42, lo = 0x46729E03DD9ED7B6 }, --  323
    { hi = 0x9E19DB92B4E31BA9, lo = 0x6C07A2C26A8346D2 }, --  324
  ]

  let k_min = -292
  -- let k_max = 324

  pow10_tbl#[k - k_min]
}

type floating_decimal = { digits : int, exponent : int }

fun multiple_of_pow2(value, e2) {
  land(value, lshl(1, e2) - 1) == 0
}

fun floor_div_pow2(x, n) {
  lshr(x, n) |> i32_of_int |> int_of_i32
}

fun floor_log_pow10(e) {
  floor_div_pow2(e * 1741647, 19)
}

fun round_to_odd(g, cp) {
  fun lo32(x): u32_of_int(x) |> int_of_u32
  fun hi32(x): lshr(x, 32) |> u32_of_int |> int_of_u32
  fun mul128(a, b) {
    let b00 = lo32(a) * lo32(b)
    let b01 = lo32(a) * hi32(b)
    let b10 = hi32(a) * lo32(b)
    let b11 = hi32(a) * hi32(b)

    let mid1 = b10 + hi32(b00);
    let mid2 = b01 + lo32(mid1);

    let hi = b11 + hi32(mid1) + hi32(mid2);
    let lo = lor(lo32(b00), lshl(lo32(mid2), 32))

    { hi, lo }
  }

  let x = mul128(g.lo, cp).hi
  let y = mul128(g.hi, cp)

  let lo = y.lo + x
  let y = { lo, hi = if int/lt_unsigned(lo, x) { y.hi + 1 } else { y.hi } }

  lor(y.hi, if int/gt_unsigned(y.lo, 1) { 1 } else { 0 })
}

fun to_decimal64(ieee_significand, ieee_exponent) {
  let exit, c, q = if ieee_exponent <> 0 {
    let c = lor(float/hidden_bit, ieee_significand)
    let q = (i32_of_int(ieee_exponent) |> int_of_i32) - float/exponent_bias
    if (0 <= -q) and (-q < float/significand_size) and multiple_of_pow2(c, -q) {
      (true, lshr(c, -q), 0)
    }
    else {
      (false, c, q)
    }
  }
    else {
      (false, ieee_significand, 1 - float/exponent_bias)
    }

  if exit {
    { digits = c, exponent = q }
  }
  else {
    let is_even = mod(c, 2) == 0
    let lower_boundary_is_closer = (ieee_significand == 0) and int/gt_unsigned(ieee_exponent, 1)

    let cbl = (4 * c) - 2 + (if lower_boundary_is_closer { 1 } else { 0 })
    let cb  = 4 * c
    let cbr = (4 * c) + 2

    let k = floor_div_pow2(
      (q * 1262611) - (if lower_boundary_is_closer { 524031 } else { 0 }),
      22
    )
    let h = q + floor_log_pow10(-k) + 1

    let pow10 = compute_pow10_double(-k)
    let vbl = round_to_odd(pow10, lshl(cbl, h))
    let vb  = round_to_odd(pow10, lshl(cb,  h))
    let vbr = round_to_odd(pow10, lshl(cbr, h))

    let lower = vbl + (if is_even { 0 } else { 1 })
    let upper = vbr - (if is_even { 0 } else { 1 })

    let s = int/div_unsigned(vb, 4)

    let exit, exit_value = if int/ge_unsigned(s, 10) {
      let sp = int/div_unsigned(s, 10)
      let up_inside = if int/le_unsigned(lower, 40 * sp) { 1 } else { 0 }
      let wp_inside = if int/le_unsigned((40 * sp) + 40, upper) { 1 } else { 0 }
      if up_inside <> wp_inside {
        (true, { digits = sp + wp_inside, exponent = k + 1 })
      }
      else { (false, { digits = 0, exponent = 0 }) }
    }
    else { (false, { digits = 0, exponent = 0 }) }

    if exit {
      exit_value
    }
    else {
      let u_inside = if int/le_unsigned(lower, 4 * s) { 1 } else { 0 }
      let w_inside = if int/le_unsigned((4 * s) + 4, upper) { 1 } else { 0 }
      if u_inside <> w_inside {
        { digits = s + w_inside, exponent = k }
      }
      else {
        let mid = (4 * s) + 2
        let round_up = if int/gt_unsigned(vb, mid) or (vb == mid and (land(s, 1) <> 0)) { 1 } else { 0 }
        { digits = s + round_up, exponent = k }
      }
    }
  }
}

fun decimal_length(v) {
  if (lshr(v, 32) |> u32_of_int |> int_of_u32) <> 0 {
    if int/ge_unsigned(v, 10000000000000000) { 17 }
    else if int/ge_unsigned(v, 1000000000000000) { 16 }
    else if int/ge_unsigned(v, 100000000000000) { 15 }
    else if int/ge_unsigned(v, 10000000000000) { 14 }
    else if int/ge_unsigned(v, 1000000000000) { 13 }
    else if int/ge_unsigned(v, 100000000000) { 12 }
    else if int/ge_unsigned(v, 10000000000) { 11 }
    else { 10 }
  }
  else {
    let v32 = u32_of_int(v) |> int_of_u32
    if int/ge_unsigned(v32, 1000000000) { 10 }
    else if int/ge_unsigned(v32, 100000000) { 9 }
    else if int/ge_unsigned(v32, 10000000) { 8 }
    else if int/ge_unsigned(v32, 1000000) { 7 }
    else if int/ge_unsigned(v32, 100000) { 6 }
    else if int/ge_unsigned(v32, 10000) { 5 }
    else if int/ge_unsigned(v32, 1000) { 4 }
    else if int/ge_unsigned(v32, 100) { 3 }
    else if int/ge_unsigned(v32, 10) { 2 }
    else { 1 }
  }
}

fun format_fixed(digits, exponent, sign_bit, int_digits) {
  let arr& = #64['\000']

  fun rec fixed(value, index, trailing, dot) {
    if dot == index {
      if index == 0 {
        -- add ".0"
        &arr#[index] = '0'
        &arr#[index + 1] = '.'
        fixed(value, index + 2, trailing, dot)
      }
      else if value == 0 {
        -- add "0."
        &arr#[index] = '.'
        &arr#[index + 1] = '0'
        index + 1
      }
      else {
        -- add "."
        &arr#[index] = '.'
        fixed(value, index + 1, trailing, dot)
      }
    }
    else {
      let tmp = value
      let value = value / 10
      let digit = tmp - (value * 10)
      if digit == 0 and trailing {
        -- skip trailing zero
        fixed(value, index, trailing, dot - 1)
      }
      else {
        &arr#[index] = string/get(int_digits, 35 + digit)
        if value <> 0 { fixed(value, index + 1, false, dot) }
        else {
          if dot > index {
            fixed(value, index + 1, false, dot)
          }
          else { index }
        }
      }
    }
  }

  let trailing = exponent < 0
  let dot = -exponent
  let length = fixed(digits, 0, trailing, dot) + 1
  let length = if sign_bit {
    &arr#[length] = '-'
    length + 1
  }
  else { length }

  -- reverse
  iter_range(0, length / 2, fun i {
    array/fixed/swap_items(&arr, i, length - i - 1)
  })

  ( arr, length )
}

fun format_scientific(digits, exponent, sign_bit, num_digits, int_digits) {
  let arr& = #64['\000']

  fun rec scientific(value, index, position, round_up) {
    let tmp = value
    let value = value / 10
    let digit = tmp - (value * 10)
    let digit = if round_up and index == 0 { digit + 1 } else { digit }
    let round_up = digit > 4

    if position == 1 {
      let index = if index == 0 {
        -- add trailing dot
        &arr#[index] = '0'
        index + 1
      }
      else { index }
      &arr#[index] = '.'
      &arr#[index + 1] = string/get(int_digits, 35 + digit)
      index + 1
    }
    else if position <= 6 {
      -- skip trailing zeroes
      if index == 0 and digit == 0 {
        scientific(value, index, position - 1, round_up)
      }
      else {
        &arr#[index] = string/get(int_digits, 35 + digit)
        scientific(value, index + 1, position - 1, round_up)
      }
    }
    else {
      scientific(value, index, position - 1, round_up)
    }
  }
  let length = scientific(digits, 0, num_digits, false) + 1
  let length = if sign_bit {
    &arr#[length] = '-'
    length + 1
  }
  else { length }

  -- reverse
  iter_range(0, length / 2, fun i {
    array/fixed/swap_items(&arr, i, length - i - 1)
  })
  let exponent = num_digits + exponent - 1
  &arr#[length] = 'e'
  &arr#[length + 1] = if exponent >= 0 { '+' } else { '-' }

  (arr, length + 2, if exponent < 0 { -exponent } else { exponent })
}
