signature {
  type t = int
  val hash : (t) -> int
  val equal : (t, t) -> bool
  -- operators
  val + : (t, t) -> t
  val - : (t, t) -> t
  val * : (t, t) -> t
  val / : (t, t) -> t
  val < : (t, t) -> bool
  val > : (t, t) -> bool
  val <= : (t, t) -> bool
  val >= : (t, t) -> bool
  val == : (t, t) -> bool
  val <> : (t, t) -> bool
}

let + = __addi
let - = __subi
let * = __multi
let / = __divi

let < = __lessi
let > = __greateri
let <= = __lesseqi
let >= = __greatereqi
let == = __equali
let <> = __nequali

fun hash(i) {
  -- basically murmurhash
  let m = 0xc6a4a7935bd1e995
  let r = 47
  let h& = lxor(0, 8 * m)
  let k& = !i
  &k = k * m
  &k = lxor(k, lshr(k, r))
  &k = k * m

  &h = lxor(h, k)
  &h = h * m

  &h = lxor(h, lshr(h, r))
  &h = h * m
  &h = lxor(h, lshr(h, r))
  h
}

let equal = ==
