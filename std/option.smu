type t['a] = #none | #some('a)

fun map(opt, f) {
  match opt {
    #some(thing): #some(f(thing))
    #none: #none
  }
}

fun iter(opt, f) {
  match opt {
    #some(thing): {
      f(thing)
      ()
    }
    #none: ()
  }
}

fun bind(opt, f) {
  match opt {
    #some(thing): f(thing)
    #none: #none
  }
}
