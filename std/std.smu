type string = String.t

let print = String.print
let cstr = String.data

type option('a) = Option.t('a)

-- prelude re-exports
let char_equal = Prelude.char_equal
let iter_range = Prelude.iter_range
-- TODO this does not yet work for polymorphic functions (def swap prelude/swap)

module Array = Array
module Hashtbl = Hashtbl
module In_channel = In_channel
module Int = Int
module Option = Option
module String = String
