type string = string/t

let print = string/print
let cstr = string/data

type option('a) = option/t('a)

-- prelude re-exports
let char_equal = prelude/char_equal
let iter_range = prelude/iter_range
-- TODO this does not yet work for polymorphic functions (def swap prelude/swap)

module array = array
module hashtbl = hashtbl
module in_channel = in_channel
module int = int
module option = option
module string = string
