type key = string
type built = { deps : array[key] }
type building = { fut : string, deps : array[key] }
type key_state = Resolv_deps | Building(building) | Built(built)


fun testing (mut state) {
  match state {
    Resolv_deps -> {
      -- Could be possible, see [set_building] below
      mut state = Built({ deps = array/create(1) })
    }
    Built(_) -> failwith("Expected to resolve build")
    Building(b) -> {
      -- TODO double free without the tmp variable
      -- let b = mov b
      mut state = Built({ deps = (b.deps) })
    }
  }
}

let mut state = Building({fut = copy(""), deps = []})
testing(mut state)
