type buf = { base : raw_ptr[u8], len : int }

fun actually_alloc(mut opt, suggested, mut buf) {
  match mut opt {
    Some(mut str) -> {
      let len = string/len(str)
      let newsize = len + suggested
      let mut arr = string/to_array(str)
      array/reserve(mut arr, newsize)
      let base = array/data(arr) |> unsafe/at(len)
      mut str = string/of_array(arr)
      mut buf = { base, len = suggested }
    }
    None -> {
      let arr = array/create(suggested)
      let base = array/data(arr)
      mut opt = Some(string/of_array(arr))
      mut buf = { base, len = suggested }
    }
  }
}

{
  let mut opt = None
  let mut buf = { base = unsafe/nullptr(), len = 0 }
  actually_alloc(mut opt, 256, mut buf)
}
