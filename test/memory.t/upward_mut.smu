type c = {c& : int}

fun counter() {
  let cnt& = 0
  fun () {
    &cnt = cnt + 1
    cnt
  }
}

let c = counter()
fmt/(println(int, c()))
fmt/(println(int, c()))
fmt/(println(int, c()))
fmt/(println(int, c()))

fun counter() {
  let cnt& = {c = 0}
  fun () {
    &cnt = {c = cnt.c + 1}
    cnt
  }
}

let c = counter()
fmt/(println(int, c().c))
fmt/(println(int, c().c))
fmt/(println(int, c().c))
fmt/(println(int, c().c))
