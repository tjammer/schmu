-- external printi : int -> unit

-- type innerst('b) = { a : 'b }
-- type p_inner('a) = { a : 'a }
-- type alias('a) = p_inner('a)
-- type t('a) = { x : int, inner : alias(innerst('a)) }

-- type inner = { a : int }

-- type foo = { a : int, b : inner }

-- fun inner() = { a = 3 }

-- val f = fun(x) -> x

-- val a = { a = 0, b = inner() }
-- printi(a.b.a)
-- printi(f({ x = 17, inner = { a = { a = 124 } } }).inner.a.a)
(external printi (fun int unit))

(record (innerst 'b) {:a 'b})

(record (p_inner 'a) {:a 'a})

(alias (alias_ 'a) (p_inner 'a))

(record (t 'a) {:x int :inner (alias_ (innerst 'a))})

(record inner {:a int})

(record foo {:a int :b inner})

(fun inner [] {:a 3})

(val f (fun [x] x))

(val a {:a 0 :b (inner)})

(printi (.a (.b a)))
(printi (.a (.a (.inner (f {:x 17 :inner {:a {:a 124}}})))))
