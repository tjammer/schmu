(external printf (fun string/cstr int unit))

-- standard case
(defn match_opt [p]
  (match p
    ((#some thing) thing)
    (#none 0)))

(->> (match_opt (#some 1))
     (printf (array/data "%i\n")))
(->> (match_opt #none)
     (printf (array/data "%i\n")))

-- switch ctors
(defn opt_match [p]
  (match p
    (#none 0)
    ((#some thing) thing)))

(->> (opt_match (#some 1))
     (printf (array/data "%i\n")))
(->> (opt_match #none)
     (printf (array/data "%i\n")))

-- some, catchall
(defn some_all [p]
  (match p
    ((#some thing) thing)
    (_ 0)))

(->> (some_all (#some 1))
     (printf (array/data "%i\n")))
(->> (some_all #none)
     (printf (array/data "%i\n")))


(defn none_all [p]
  (match p
    (#none 0)
    (_ 1)))

(->> (none_all (#some 1))
     (printf (array/data "%i\n")))
(def (none_int (option int)) #none)
(->> (none_all none_int)
     (printf (array/data "%i\n")))
