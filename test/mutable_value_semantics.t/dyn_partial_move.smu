type wrap['a] = { a : 'a }

fun remove(optarr&, index) {
  let opt& = &optarr.[index.a]
  match opt {
    Some(thing) -> {
      let value = !thing.a
      &opt = None
      Some(value)
    }
    None -> None
  }
}
let optarr& = [Some({a = copy("thing")})]

remove(&optarr, {a = 0}) |> ignore
