import async

{
  let future, promise = async/wait()
  let f2, p2 = async/wait()


  let _ = {
    let v <- async/bind(future)
    let v <- async/bind({
      fmt/(print1("resolved to {}\n", int, v))
      copy(f2)
    })
    fmt/(print1("resolved later to {}\n", str, v))
    async/return(())
  }

  let mut pr = mov promise -- make mutateable by moving
  println("resolving first promise")
  async/resolve(mut pr, 3)

  let mut p2 = mov p2
  println("resolving second promise")
  async/resolve(mut p2, copy("a string"))
}
