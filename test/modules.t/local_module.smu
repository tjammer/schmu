fun test(): print("hey test")

module Local:
  signature:
    type t
    val test : () -> unit
    val poly_test : ('a) -> unit
    val value : string
  module Nested:
    type t = unit
  type t = int
  fun test():
    print("hey thing")
  fun poly_test(a):
    print(fmt("hey poly ", a))
  let value = "test"
  ignore(value)

test()

Local.test()
Local.poly_test("test")

module Nosig:
  type t = {a : int}
  type other = int
  module Nested:
    fun nested():
      print("i'm nested")

let test : Nosig.t = {a = 10}
ignore(test)

Nosig.Nested.nested()
