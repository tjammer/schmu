(open modd)

(print a)
(print b)

(print modd/public/a)

(modd/func)
(print (modd/lambda))
(print (modd/closure))

-- use polymorphic aliased function from another module
(defn swapped (a! i j)
  (let [a& !a]
    (swap &a i j)
    a))

(array/iter (swapped !["world" "hello"] 0 1) (fn (s) (print s)))
