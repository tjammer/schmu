import async

{
  let future, promise = async/wait()
  let f2, p2 = async/wait()

  let >>= = async/bind

  let _ = future >>= fun v {
    async/return(!fmt/(str/print1("resolved to {}", int, v)))
  } >>= fun v {
    println(v)
    copy(f2)
  } >>= fun v {
    fmt/(print1("resolved later to {}\n", str, v))
    async/return(())
  }

  let pr& = !promise -- make mutable by moving
  println("resolving first promise")
  async/promise_resolve(&pr, 3)

  let p2& = !p2
  println("resolving second promise")
  async/promise_resolve(&p2, copy("a string"))
}
