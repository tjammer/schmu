m2/(do
     (print (fmt-str (odd? 1)))
     (print (fmt-str (odd? 100)))
     (print (fmt-str (even? 100)))

     (def arr& [0 1 2 3])
     (pop &arr)
     (def arr& [0 1 2 3])
     (pop-all &arr)
     (print (fmt-str (array/length arr)))

     (print (fmt-str cnt)))

(rec
 (defn pop (arr&)
   (print "pop")
   (array/drop-back &arr)
   (pop-all &arr))
 (defn pop-all (arr&)
   (if (= (array/length arr) 0)
     ()
     (pop &arr))))

(def arr& [0 1 2 3])
(pop &arr)
(def arr& [0 1 2 3])
(pop-all &arr)
(print (fmt-str (array/length arr)))

(print (fmt-str m2/cnt))

(ignore (m2/test 1))
