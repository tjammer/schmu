(type c {:c& int})

(defn counter []
  (def cnt& 0)
  (fn [] (set &cnt !(+ cnt 1))
    cnt))

(def c (counter))
(print (fmt-str (c)))
(print (fmt-str (c)))
(print (fmt-str (c)))
(print (fmt-str (c)))

(defn counter []
  (def cnt& {:c 0})
  (fn [] (set &cnt !{:c (+ (.c cnt) 1)})
    cnt))

(def c (counter))
(print (fmt-str (.c (c))))
(print (fmt-str (.c (c))))
(print (fmt-str (.c (c))))
(print (fmt-str (.c (c))))
