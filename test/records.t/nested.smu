external printi : (int) -> unit

type innerst['b] = { a : 'b }
type p_inner['a] = { a : 'a }
type alias['a] = p_inner['a]
type t['a] = { x : int, inner : alias[innerst['a]] }

type inner = { a : int }

type foo = { a : int, b : inner }

fun inner(): { a = 3 }

let f = fun(x!): x

let a = { a = 0, b = inner() }
printi(a.b.a)
printi(f(!{ x = 17, inner = { a = { a = 124 } } }).inner.a.a)
