external printi : int -> unit

type t('a) = { null : int, first : int, gen : 'a, third : bool }

type gen_first('a) = { only : 'a, is : bool }

fn print_bool(b)
  if b then printi(1)
  else printi(0)

fn first(any)
  printi(any.first)

fn gen(any)
  any.gen

fn third(any)
  print_bool(any.third)

fn only(any)
  any.only

fn is(any)
  print_bool(any.is)

int_t = { null = 0, first = 700, gen = 20, third = true }
f = { only = 420, is = false }

first(int_t) >>
third(int_t) >>
printi(gen(int_t)) >>
printi(only(f)) >>
is(f)
