(external printi (fun int unit))

(type (t 'a) {:first int :gen 'a :third bool})

(defn apply [[f (fun 'b 'a)] [x 'b]] (f x))

(defn pass [x]
  -- We have to use the record somehow, otherwise it's passed
  -- as a generic variable and then copied trivially
  (let [x (copy x)]
    {:first (.first x) :gen (.gen x) :third (.third x)}))

(def int_t {:first 700 :gen 20 :third false})

(printi (.first (apply pass int_t)))
(printi (.first (apply pass {:first 234 :gen false :third true})))
