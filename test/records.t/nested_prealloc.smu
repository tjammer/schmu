external printi : fun (int) -> unit

type int_wrap = {dat : int, b : int, c : int}
type test['a] = {int_wrap : 'a}
type mutate['a] = {mut wrapped : 'a}

fun test_thing() {
    let test = {int_wrap = {dat = 2, b = 0, c = 0}}
    fun rec vector_loop(i) {
        if i == 10 {test.int_wrap} else {vector_loop(i + 1)}
    }
    vector_loop(0)
}
fun test_thing_mutate() {
    let mut test = {wrapped = {dat = 2, b = 0, c = 0}}
    fun rec vector_loop(i) {
        if i == 10 {()} else {
            mut test.wrapped = {dat = test.wrapped.dat + 1, b = 0, c = 0}
            vector_loop(i + 1)}
    }
    vector_loop(0)
    test.wrapped
}
test_thing().dat |> printi
test_thing_mutate().dat |> printi
