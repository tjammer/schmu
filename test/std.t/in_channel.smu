match in_channel/open("in_channel.smu") {
  Some(ic):{
    let ic& = !ic
    let buf& = array/create(4096)
    in_channel/readn(&ic, &buf, 50).ignore()
    let str& = !string/of_array(!buf)
    println(str)

    &buf = string/to_array(!str)
    array/clear(&buf)
    in_channel/readn(&ic, &buf, 6).ignore()
    &str = string/of_array(!buf)
    println(str)

    &buf = string/to_array(!str)
    array/clear(&buf)
    match in_channel/readline(&ic, &buf) {
      Some(n): println(fmt("read ", n, " bytes"))
      None: println("read nothing")
    }
    &str = string/of_array(!buf)
    println(str)

    &buf = string/to_array(!str)
    array/clear(&buf)
    match in_channel/readline(&ic, &buf) {
      Some(n): println(fmt("read ", n, " bytes"))
      None: println("read nothing")
    }
    &str = string/of_array(!buf)
    println(str)

    &buf = string/to_array(!str)
    array/clear(&buf)
    match in_channel/readrem(&ic, &buf) {
      Some(n): println(fmt("read ", n, " bytes"))
      None: println("read nothing")
    }
    &str = string/of_array(!buf)
    println(str)

    in_channel/close(ic)
  }
  None: ()
}

match in_channel/open("in_channel.smu") {
  Some(ic): {
    let ic& = !ic
    println(in_channel/readall(&ic))
    in_channel/close(ic)
  }
  None: ()
}

match in_channel/open("in_channel.smu") {
  Some(ic): {
    let ic& = !ic
    in_channel/lines(&ic, fun line {println(line)})
    in_channel/close(ic)
  }
  None: ()
}
