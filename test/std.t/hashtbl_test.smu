module stbl = hashtbl/make(string)

fun string():
    print("## string")
    let tbl& = stbl/create(2)
    stbl/insert(&tbl, !"key", !1.1)
    fun find_print(key):
        match stbl/find(tbl, key):
            #some(v): print(fmt(v))
            #none: print("none")
    find_print("key")
    find_print("otherkey")
    stbl/remove(&tbl, "key")
    find_print("key")

print("# hashtbl")
string()

module key:
  type t = #a1 | #a2 | #b1 | #b2

  fun hash(k : t): match k:
    #a1: 0
    #a2: 1
    #b1: 2
    #b2: 3

  fun equal(a, b): hash(a) == hash(b)

module keytbl = hashtbl/make(key)

fun key():
  print("## key")
  let tbl& = keytbl/create(512)
  keytbl/insert(&tbl, !#a1, !10)
  keytbl/insert(&tbl, !#a2, !20)
  match keytbl/find(tbl, #a1):
    #some(v): print(fmt("some v: ", v))
    #none: print("none")

key()
