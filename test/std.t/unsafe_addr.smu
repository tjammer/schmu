fun in() {
  let mut arr = [0, 1]
  let mut thing = mut unsafe/addr(mut arr.[1]) |> unsafe/get(0)
  mut thing = 2
  let thing = unsafe/addr(mut arr.[1])

  unsafe/(assert(((array/data(arr) |> reinterpret) +> 0) == (addr(mut arr.[0]) +> 0)))
  unsafe/(assert(((array/data(arr) |> unsafe/at(1) |> reinterpret) +> 0) == ((thing |> reinterpret) +> 0)))
  fmt/(println(int, arr.[1]))
}
in()
