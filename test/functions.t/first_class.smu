external printi : int -> unit

fn apply(x, f)
  f(x)

fn add1(x)
  x + 1

-- We also pass polymorphic functions
fn pass(x)
  x

-- ...and a lambda
pass2 = fn (x) x

fn makefalse(b)
  if b then false
  else b

fn int_of_bool(b)
  if b then 1 else 0

-- TODO polymorphic recursion example

printi(apply(0, add1)) >>
printi(apply(1, fn (x) x + 1)) >>
-- printi(int_of_bool(apply(true, makefalse))) >>
true->apply(makefalse)->int_of_bool->printi >>
printi(apply(3, fn (x) x)) -- Should be inferred with concrete type
>> printi(apply(4, pass))
-- >> printi(apply(5, pass2))
